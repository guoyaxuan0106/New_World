{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Model","provenance":[{"file_id":"1X6p-uF7NPeoWiFeMkWKk8_ZKe-ghSoQU","timestamp":1598729266039}],"collapsed_sections":["9Va2JtIOomk0","NPu-GjhgqnkY","LLwXhQwCHIb3","loGag7jyHM-1","mjef7jONHOX6","Gddi9-OWLkqT","SCdA_a6PJBE2","YcsBgmB6H6C6","eWgvfAFLH_ov","sMz3PcBUIGQ6"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"b0d6949d484041d2b8ebada7c5701053":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_9201f66d66a4409abc617197985a4ec7","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_6cb34c558191415da8769a453988e1e8","IPY_MODEL_d44c76838c47460daeaeb4dde81e81b8"]}},"9201f66d66a4409abc617197985a4ec7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6cb34c558191415da8769a453988e1e8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_c0e17f7843b8405aae7544ebb002225b","_dom_classes":[],"description":"100%","_model_name":"FloatProgressModel","bar_style":"success","max":178728960,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":178728960,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_7e30b947ecfb48b7b5818df7ed81396a"}},"d44c76838c47460daeaeb4dde81e81b8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_38a5e11387b6488384677175617aedfb","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"â€‹","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 170M/170M [00:01&lt;00:00, 106MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_4dc0a75f46fa4e2d89dfa1e6aaa9390f"}},"c0e17f7843b8405aae7544ebb002225b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"7e30b947ecfb48b7b5818df7ed81396a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"38a5e11387b6488384677175617aedfb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"4dc0a75f46fa4e2d89dfa1e6aaa9390f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"MK5ZR5XE5DhL"},"source":["# Download dataset *"]},{"cell_type":"code","metadata":{"id":"og8AkMaDeE7A","executionInfo":{"status":"ok","timestamp":1602785155138,"user_tz":240,"elapsed":16353,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}},"outputId":"034873cb-b10f-42ad-ca54-b519fce6415f","colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Q129NFg2qD98","executionInfo":{"status":"ok","timestamp":1602785173262,"user_tz":240,"elapsed":11919,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}},"outputId":"86d8a908-5127-4864-e468-788b2aa3a180","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["!unzip '/content/drive/My Drive/Video_Captioner/Data/train2014.zip'\n","!unzip '/content/drive/My Drive/Video_Captioner/Data/val2014.zip'\n","\n","!wget http://cs.stanford.edu/people/karpathy/deepimagesent/caption_datasets.zip\n","!unzip caption_datasets.zip\n","!rm caption_datasets.zip\n","!rm dataset_flickr30k.json\n","!rm dataset_flickr8k.json"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Archive:  /content/drive/My Drive/Video_Captioner/Data/train2014.zip\n","   creating: train2014/\n","  inflating: __MACOSX/._train2014    \n","  inflating: train2014/COCO_train2014_000000223373.jpg  \n","  inflating: train2014/COCO_train2014_000000460005.jpg  \n","  inflating: train2014/COCO_train2014_000000485937.jpg  \n","  inflating: train2014/COCO_train2014_000000477579.jpg  \n","  inflating: train2014/COCO_train2014_000000215819.jpg  \n","  inflating: train2014/COCO_train2014_000000318497.jpg  \n","  inflating: train2014/COCO_train2014_000000012102.jpg  \n","  inflating: train2014/COCO_train2014_000000161846.jpg  \n","  inflating: train2014/COCO_train2014_000000329892.jpg  \n","  inflating: train2014/COCO_train2014_000000478892.jpg  \n","  inflating: train2014/COCO_train2014_000000457871.jpg  \n","  inflating: train2014/COCO_train2014_000000492293.jpg  \n","  inflating: train2014/COCO_train2014_000000411824.jpg  \n","  inflating: train2014/COCO_train2014_000000075199.jpg  \n","  inflating: train2014/COCO_train2014_000000272882.jpg  \n","  inflating: train2014/COCO_train2014_000000042735.jpg  \n","  inflating: train2014/COCO_train2014_000000544819.jpg  \n","  inflating: train2014/COCO_train2014_000000096202.jpg  \n","  inflating: train2014/COCO_train2014_000000089322.jpg  \n","  inflating: train2014/COCO_train2014_000000448951.jpg  \n","  inflating: train2014/COCO_train2014_000000182505.jpg  \n","  inflating: train2014/COCO_train2014_000000085518.jpg  \n","  inflating: train2014/COCO_train2014_000000267531.jpg  \n","  inflating: train2014/COCO_train2014_000000142047.jpg  \n","  inflating: train2014/COCO_train2014_000000092064.jpg  \n","  inflating: train2014/COCO_train2014_000000405851.jpg  \n","  inflating: train2014/COCO_train2014_000000278411.jpg  \n","  inflating: train2014/COCO_train2014_000000423128.jpg  \n","  inflating: train2014/COCO_train2014_000000510290.jpg  \n","  inflating: train2014/COCO_train2014_000000399837.jpg  \n","  inflating: train2014/COCO_train2014_000000277722.jpg  \n","  inflating: train2014/COCO_train2014_000000229138.jpg  \n","  inflating: train2014/COCO_train2014_000000029194.jpg  \n","  inflating: train2014/COCO_train2014_000000144436.jpg  \n","  inflating: train2014/COCO_train2014_000000518814.jpg  \n","  inflating: train2014/COCO_train2014_000000529411.jpg  \n","  inflating: train2014/COCO_train2014_000000228226.jpg  \n","  inflating: train2014/COCO_train2014_000000372128.jpg  \n","  inflating: train2014/COCO_train2014_000000163089.jpg  \n","  inflating: train2014/COCO_train2014_000000364992.jpg  \n","  inflating: train2014/COCO_train2014_000000154625.jpg  \n","  inflating: train2014/COCO_train2014_000000432025.jpg  \n","  inflating: train2014/COCO_train2014_000000452909.jpg  \n","  inflating: train2014/COCO_train2014_000000016364.jpg  \n","  inflating: train2014/COCO_train2014_000000541961.jpg  \n","  inflating: train2014/COCO_train2014_000000507934.jpg  \n","  inflating: train2014/COCO_train2014_000000491942.jpg  \n","  inflating: train2014/COCO_train2014_000000567018.jpg  \n","  inflating: train2014/COCO_train2014_000000271435.jpg  \n","  inflating: train2014/COCO_train2014_000000353858.jpg  \n","  inflating: train2014/COCO_train2014_000000240830.jpg  \n","  inflating: train2014/COCO_train2014_000000070787.jpg  \n","  inflating: train2014/COCO_train2014_000000061852.jpg  \n","  inflating: train2014/COCO_train2014_000000190667.jpg  \n","  inflating: train2014/COCO_train2014_000000529377.jpg  \n","  inflating: train2014/COCO_train2014_000000506394.jpg  \n","  inflating: train2014/COCO_train2014_000000082511.jpg  \n","  inflating: train2014/COCO_train2014_000000472367.jpg  \n","  inflating: train2014/COCO_train2014_000000010073.jpg  \n","  inflating: train2014/COCO_train2014_000000496793.jpg  \n","  inflating: train2014/COCO_train2014_000000537149.jpg  \n","  inflating: train2014/COCO_train2014_000000071499.jpg  \n","  inflating: train2014/COCO_train2014_000000000260.jpg  \n","  inflating: train2014/COCO_train2014_000000092702.jpg  \n","  inflating: train2014/COCO_train2014_000000221202.jpg  \n","  inflating: train2014/COCO_train2014_000000520435.jpg  \n","  inflating: train2014/COCO_train2014_000000514790.jpg  \n","  inflating: train2014/COCO_train2014_000000534440.jpg  \n","  inflating: train2014/COCO_train2014_000000086777.jpg  \n","  inflating: train2014/COCO_train2014_000000450878.jpg  \n","  inflating: train2014/COCO_train2014_000000099657.jpg  \n","  inflating: train2014/COCO_train2014_000000370059.jpg  \n","  inflating: train2014/COCO_train2014_000000263031.jpg  \n","  inflating: train2014/COCO_train2014_000000096564.jpg  \n","  inflating: train2014/COCO_train2014_000000012664.jpg  \n","  inflating: train2014/COCO_train2014_000000098549.jpg  \n","  inflating: train2014/COCO_train2014_000000338021.jpg  \n","  inflating: train2014/COCO_train2014_000000147659.jpg  \n","  inflating: train2014/COCO_train2014_000000421059.jpg  \n","  inflating: train2014/COCO_train2014_000000223415.jpg  \n","  inflating: train2014/COCO_train2014_000000254845.jpg  \n","  inflating: train2014/COCO_train2014_000000572401.jpg  \n","  inflating: train2014/COCO_train2014_000000147895.jpg  \n","  inflating: train2014/COCO_train2014_000000086763.jpg  \n","  inflating: train2014/COCO_train2014_000000149660.jpg  \n","  inflating: train2014/COCO_train2014_000000062397.jpg  \n","  inflating: train2014/COCO_train2014_000000274559.jpg  \n","  inflating: train2014/COCO_train2014_000000469035.jpg  \n","  inflating: train2014/COCO_train2014_000000225070.jpg  \n","  inflating: train2014/COCO_train2014_000000100506.jpg  \n","  inflating: train2014/COCO_train2014_000000150331.jpg  \n","  inflating: train2014/COCO_train2014_000000371353.jpg  \n","  inflating: train2014/COCO_train2014_000000119057.jpg  \n","  inflating: train2014/COCO_train2014_000000439602.jpg  \n","  inflating: train2014/COCO_train2014_000000044436.jpg  \n","  inflating: train2014/COCO_train2014_000000223401.jpg  \n","  inflating: train2014/COCO_train2014_000000265454.jpg  \n","  inflating: train2014/COCO_train2014_000000033866.jpg  \n","  inflating: train2014/COCO_train2014_000000494190.jpg  \n","  inflating: train2014/COCO_train2014_000000341290.jpg  \n","  inflating: train2014/COCO_train2014_000000180460.jpg  \n","  inflating: train2014/COCO_train2014_000000084174.jpg  \n","  inflating: train2014/COCO_train2014_000000237474.jpg  \n","  inflating: train2014/COCO_train2014_000000568459.jpg  \n","  inflating: train2014/COCO_train2014_000000206871.jpg  \n","  inflating: train2014/COCO_train2014_000000516193.jpg  \n","  inflating: train2014/COCO_train2014_000000412487.jpg  \n","  inflating: train2014/COCO_train2014_000000019725.jpg  \n","  inflating: train2014/COCO_train2014_000000227667.jpg  \n","  inflating: train2014/COCO_train2014_000000102311.jpg  \n","  inflating: train2014/COCO_train2014_000000051985.jpg  \n","  inflating: train2014/COCO_train2014_000000038933.jpg  \n","  inflating: train2014/COCO_train2014_000000413941.jpg  \n","  inflating: train2014/COCO_train2014_000000164094.jpg  \n","  inflating: train2014/COCO_train2014_000000153638.jpg  \n","  inflating: train2014/COCO_train2014_000000353694.jpg  \n","  inflating: train2014/COCO_train2014_000000095079.jpg  \n","  inflating: train2014/COCO_train2014_000000292962.jpg  \n","  inflating: train2014/COCO_train2014_000000548951.jpg  \n","  inflating: train2014/COCO_train2014_000000152526.jpg  \n","  inflating: train2014/COCO_train2014_000000434326.jpg  \n","  inflating: train2014/COCO_train2014_000000277050.jpg  \n","  inflating: train2014/COCO_train2014_000000498972.jpg  \n","  inflating: train2014/COCO_train2014_000000056032.jpg  \n","  inflating: train2014/COCO_train2014_000000569747.jpg  \n","  inflating: train2014/COCO_train2014_000000199131.jpg  \n","  inflating: train2014/COCO_train2014_000000578892.jpg  \n","  inflating: train2014/COCO_train2014_000000221216.jpg  \n","  inflating: train2014/COCO_train2014_000000413799.jpg  \n","  inflating: train2014/COCO_train2014_000000142735.jpg  \n","  inflating: train2014/COCO_train2014_000000569021.jpg  \n","  inflating: train2014/COCO_train2014_000000363031.jpg  \n","  inflating: train2014/COCO_train2014_000000104006.jpg  \n","  inflating: train2014/COCO_train2014_000000142053.jpg  \n","  inflating: train2014/COCO_train2014_000000579232.jpg  \n","  inflating: train2014/COCO_train2014_000000465169.jpg  \n","  inflating: train2014/COCO_train2014_000000186777.jpg  \n","  inflating: train2014/COCO_train2014_000000010701.jpg  \n","  inflating: train2014/COCO_train2014_000000530154.jpg  \n","  inflating: train2014/COCO_train2014_000000550878.jpg  \n","  inflating: train2014/COCO_train2014_000000029180.jpg  \n","  inflating: train2014/COCO_train2014_000000187469.jpg  \n","  inflating: train2014/COCO_train2014_000000490490.jpg  \n","  inflating: train2014/COCO_train2014_000000414948.jpg  \n","  inflating: train2014/COCO_train2014_000000269508.jpg  \n","  inflating: train2014/COCO_train2014_000000480683.jpg  \n","  inflating: train2014/COCO_train2014_000000521059.jpg  \n","  inflating: train2014/COCO_train2014_000000047659.jpg  \n","  inflating: train2014/COCO_train2014_000000105318.jpg  \n","  inflating: train2014/COCO_train2014_000000109522.jpg  \n","  inflating: train2014/COCO_train2014_000000502680.jpg  \n","  inflating: train2014/COCO_train2014_000000493199.jpg  \n","  inflating: train2014/COCO_train2014_000000318483.jpg  \n","  inflating: train2014/COCO_train2014_000000116402.jpg  \n","  inflating: train2014/COCO_train2014_000000371435.jpg  \n","  inflating: train2014/COCO_train2014_000000127807.jpg  \n","  inflating: train2014/COCO_train2014_000000459848.jpg  \n","  inflating: train2014/COCO_train2014_000000161852.jpg  \n","  inflating: train2014/COCO_train2014_000000417299.jpg  \n","  inflating: train2014/COCO_train2014_000000367257.jpg  \n","  inflating: train2014/COCO_train2014_000000466460.jpg  \n","  inflating: train2014/COCO_train2014_000000171499.jpg  \n","  inflating: train2014/COCO_train2014_000000298297.jpg  \n","  inflating: train2014/COCO_train2014_000000146235.jpg  \n","  inflating: train2014/COCO_train2014_000000562174.jpg  \n","  inflating: train2014/COCO_train2014_000000192702.jpg  \n","  inflating: train2014/COCO_train2014_000000159315.jpg  \n","  inflating: train2014/COCO_train2014_000000242955.jpg  \n","  inflating: train2014/COCO_train2014_000000156026.jpg  \n","  inflating: train2014/COCO_train2014_000000534332.jpg  \n","  inflating: train2014/COCO_train2014_000000377044.jpg  \n","  inflating: train2014/COCO_train2014_000000110073.jpg  \n","  inflating: train2014/COCO_train2014_000000018375.jpg  \n","  inflating: train2014/COCO_train2014_000000303935.jpg  \n","  inflating: train2014/COCO_train2014_000000037396.jpg  \n","  inflating: train2014/COCO_train2014_000000270071.jpg  \n","  inflating: train2014/COCO_train2014_000000571646.jpg  \n","  inflating: train2014/COCO_train2014_000000256908.jpg  \n","  inflating: train2014/COCO_train2014_000000095737.jpg  \n","  inflating: train2014/COCO_train2014_000000423114.jpg  \n","  inflating: train2014/COCO_train2014_000000473723.jpg  \n","  inflating: train2014/COCO_train2014_000000083155.jpg  \n","  inflating: train2014/COCO_train2014_000000397826.jpg  \n","  inflating: train2014/COCO_train2014_000000049884.jpg  \n","  inflating: train2014/COCO_train2014_000000279733.jpg  \n","  inflating: train2014/COCO_train2014_000000105330.jpg  \n","  inflating: train2014/COCO_train2014_000000231993.jpg  \n","  inflating: train2014/COCO_train2014_000000285588.jpg  \n","  inflating: train2014/COCO_train2014_000000258925.jpg  \n","  inflating: train2014/COCO_train2014_000000507908.jpg  \n","  inflating: train2014/COCO_train2014_000000238009.jpg  \n","  inflating: train2014/COCO_train2014_000000198561.jpg  \n","  inflating: train2014/COCO_train2014_000000432019.jpg  \n","  inflating: train2014/COCO_train2014_000000330327.jpg  \n","  inflating: train2014/COCO_train2014_000000431510.jpg  \n","  inflating: train2014/COCO_train2014_000000004984.jpg  \n","  inflating: train2014/COCO_train2014_000000053604.jpg  \n","  inflating: train2014/COCO_train2014_000000460039.jpg  \n","  inflating: train2014/COCO_train2014_000000286081.jpg  \n","  inflating: train2014/COCO_train2014_000000106639.jpg  \n","  inflating: train2014/COCO_train2014_000000224420.jpg  \n","  inflating: train2014/COCO_train2014_000000147103.jpg  \n","  inflating: train2014/COCO_train2014_000000148230.jpg  \n","  inflating: train2014/COCO_train2014_000000337448.jpg  \n","  inflating: train2014/COCO_train2014_000000468465.jpg  \n","  inflating: train2014/COCO_train2014_000000098213.jpg  \n","  inflating: train2014/COCO_train2014_000000184148.jpg  \n","  inflating: train2014/COCO_train2014_000000118407.jpg  \n","  inflating: train2014/COCO_train2014_000000438252.jpg  \n","  inflating: train2014/COCO_train2014_000000466448.jpg  \n","  inflating: train2014/COCO_train2014_000000151761.jpg  \n","  inflating: train2014/COCO_train2014_000000136922.jpg  \n","  inflating: train2014/COCO_train2014_000000107527.jpg  \n","  inflating: train2014/COCO_train2014_000000545285.jpg  \n","  inflating: train2014/COCO_train2014_000000416811.jpg  \n","  inflating: train2014/COCO_train2014_000000290185.jpg  \n","  inflating: train2014/COCO_train2014_000000156768.jpg  \n","  inflating: train2014/COCO_train2014_000000565155.jpg  \n","  inflating: train2014/COCO_train2014_000000505879.jpg  \n","  inflating: train2014/COCO_train2014_000000395957.jpg  \n","  inflating: train2014/COCO_train2014_000000137382.jpg  \n","  inflating: train2014/COCO_train2014_000000367519.jpg  \n","  inflating: train2014/COCO_train2014_000000280396.jpg  \n","  inflating: train2014/COCO_train2014_000000437607.jpg  \n","  inflating: train2014/COCO_train2014_000000274571.jpg  \n","  inflating: train2014/COCO_train2014_000000149648.jpg  \n","  inflating: train2014/COCO_train2014_000000460987.jpg  \n","  inflating: train2014/COCO_train2014_000000232524.jpg  \n","  inflating: train2014/COCO_train2014_000000086993.jpg  \n","  inflating: train2014/COCO_train2014_000000043371.jpg  \n","  inflating: train2014/COCO_train2014_000000101630.jpg  \n","  inflating: train2014/COCO_train2014_000000179953.jpg  \n","  inflating: train2014/COCO_train2014_000000005324.jpg  \n","  inflating: train2014/COCO_train2014_000000441949.jpg  \n","  inflating: train2014/COCO_train2014_000000436519.jpg  \n","  inflating: train2014/COCO_train2014_000000157476.jpg  \n","  inflating: train2014/COCO_train2014_000000272100.jpg  \n","  inflating: train2014/COCO_train2014_000000254879.jpg  \n","  inflating: train2014/COCO_train2014_000000347811.jpg  \n","  inflating: train2014/COCO_train2014_000000498782.jpg  \n","  inflating: train2014/COCO_train2014_000000539158.jpg  \n","  inflating: train2014/COCO_train2014_000000568471.jpg  \n","  inflating: train2014/COCO_train2014_000000172806.jpg  \n","  inflating: train2014/COCO_train2014_000000021292.jpg  \n","  inflating: train2014/COCO_train2014_000000315831.jpg  \n","  inflating: train2014/COCO_train2014_000000435010.jpg  \n","  inflating: train2014/COCO_train2014_000000473045.jpg  \n","  inflating: train2014/COCO_train2014_000000115645.jpg  \n","  inflating: train2014/COCO_train2014_000000496977.jpg  \n","  inflating: train2014/COCO_train2014_000000031081.jpg  \n","  inflating: train2014/COCO_train2014_000000381922.jpg  \n","  inflating: train2014/COCO_train2014_000000548979.jpg  \n","  inflating: train2014/COCO_train2014_000000342969.jpg  \n","  inflating: train2014/COCO_train2014_000000444831.jpg  \n","  inflating: train2014/COCO_train2014_000000029816.jpg  \n","  inflating: train2014/COCO_train2014_000000442298.jpg  \n","  inflating: train2014/COCO_train2014_000000181756.jpg  \n","  inflating: train2014/COCO_train2014_000000227897.jpg  \n","  inflating: train2014/COCO_train2014_000000199119.jpg  \n","  inflating: train2014/COCO_train2014_000000576883.jpg  \n","  inflating: train2014/COCO_train2014_000000197120.jpg  \n","  inflating: train2014/COCO_train2014_000000463242.jpg  \n","  inflating: train2014/COCO_train2014_000000362475.jpg  \n","  inflating: train2014/COCO_train2014_000000498796.jpg  \n","  inflating: train2014/COCO_train2014_000000019719.jpg  \n","  inflating: train2014/COCO_train2014_000000443192.jpg  \n","  inflating: train2014/COCO_train2014_000000021286.jpg  \n","  inflating: train2014/COCO_train2014_000000083627.jpg  \n","  inflating: train2014/COCO_train2014_000000259391.jpg  \n","  inflating: train2014/COCO_train2014_000000153604.jpg  \n","  inflating: train2014/COCO_train2014_000000557695.jpg  \n","  inflating: train2014/COCO_train2014_000000279041.jpg  \n","  inflating: train2014/COCO_train2014_000000546940.jpg  \n","  inflating: train2014/COCO_train2014_000000322051.jpg  \n","  inflating: train2014/COCO_train2014_000000191551.jpg  \n","  inflating: train2014/COCO_train2014_000000103033.jpg  \n","  inflating: train2014/COCO_train2014_000000579568.jpg  \n","  inflating: train2014/COCO_train2014_000000226545.jpg  \n","  inflating: train2014/COCO_train2014_000000566448.jpg  \n","  inflating: train2014/COCO_train2014_000000227883.jpg  \n","  inflating: train2014/COCO_train2014_000000270703.jpg  \n","  inflating: train2014/COCO_train2014_000000029802.jpg  \n","  inflating: train2014/COCO_train2014_000000534468.jpg  \n","  inflating: train2014/COCO_train2014_000000326237.jpg  \n","  inflating: train2014/COCO_train2014_000000141200.jpg  \n","  inflating: train2014/COCO_train2014_000000360262.jpg  \n","  inflating: train2014/COCO_train2014_000000543838.jpg  \n","  inflating: train2014/COCO_train2014_000000523114.jpg  \n","  inflating: train2014/COCO_train2014_000000137396.jpg  \n","  inflating: train2014/COCO_train2014_000000158989.jpg  \n","  inflating: train2014/COCO_train2014_000000117046.jpg  \n","  inflating: train2014/COCO_train2014_000000356908.jpg  \n","  inflating: train2014/COCO_train2014_000000437613.jpg  \n","  inflating: train2014/COCO_train2014_000000469009.jpg  \n","  inflating: train2014/COCO_train2014_000000136088.jpg  \n","  inflating: train2014/COCO_train2014_000000385588.jpg  \n","  inflating: train2014/COCO_train2014_000000262307.jpg  \n","  inflating: train2014/COCO_train2014_000000288906.jpg  \n","  inflating: train2014/COCO_train2014_000000086987.jpg  \n","  inflating: train2014/COCO_train2014_000000003999.jpg  \n","  inflating: train2014/COCO_train2014_000000053176.jpg  \n","  inflating: train2014/COCO_train2014_000000212838.jpg  \n","  inflating: train2014/COCO_train2014_000000157462.jpg  \n","  inflating: train2014/COCO_train2014_000000109278.jpg  \n","  inflating: train2014/COCO_train2014_000000149884.jpg  \n","  inflating: train2014/COCO_train2014_000000379733.jpg  \n","  inflating: train2014/COCO_train2014_000000376366.jpg  \n","  inflating: train2014/COCO_train2014_000000535010.jpg  \n","  inflating: train2014/COCO_train2014_000000431504.jpg  \n","  inflating: train2014/COCO_train2014_000000015645.jpg  \n","  inflating: train2014/COCO_train2014_000000296286.jpg  \n","  inflating: train2014/COCO_train2014_000000080448.jpg  \n","  inflating: train2014/COCO_train2014_000000544831.jpg  \n","  inflating: train2014/COCO_train2014_000000348288.jpg  \n","  inflating: train2014/COCO_train2014_000000118413.jpg  \n","  inflating: train2014/COCO_train2014_000000494812.jpg  \n","  inflating: train2014/COCO_train2014_000000297198.jpg  \n","  inflating: train2014/COCO_train2014_000000024498.jpg  \n","  inflating: train2014/COCO_train2014_000000418196.jpg  \n","  inflating: train2014/COCO_train2014_000000274203.jpg  \n","  inflating: train2014/COCO_train2014_000000281922.jpg  \n","  inflating: train2014/COCO_train2014_000000306681.jpg  \n","  inflating: train2014/COCO_train2014_000000428055.jpg  \n","  inflating: train2014/COCO_train2014_000000427366.jpg  \n","  inflating: train2014/COCO_train2014_000000141566.jpg  \n","  inflating: train2014/COCO_train2014_000000523672.jpg  \n","  inflating: train2014/COCO_train2014_000000242969.jpg  \n","  inflating: train2014/COCO_train2014_000000461333.jpg  \n","  inflating: train2014/COCO_train2014_000000538534.jpg  \n","  inflating: train2014/COCO_train2014_000000196558.jpg  \n","  inflating: train2014/COCO_train2014_000000509931.jpg  \n","  inflating: train2014/COCO_train2014_000000530168.jpg  \n","  inflating: train2014/COCO_train2014_000000027191.jpg  \n","  inflating: train2014/COCO_train2014_000000294491.jpg  \n","  inflating: train2014/COCO_train2014_000000550844.jpg  \n","  inflating: train2014/COCO_train2014_000000472429.jpg  \n","  inflating: train2014/COCO_train2014_000000114229.jpg  \n","  inflating: train2014/COCO_train2014_000000260276.jpg  \n","  inflating: train2014/COCO_train2014_000000278439.jpg  \n","  inflating: train2014/COCO_train2014_000000465155.jpg  \n","  inflating: train2014/COCO_train2014_000000153162.jpg  \n","  inflating: train2014/COCO_train2014_000000314285.jpg  \n","  inflating: train2014/COCO_train2014_000000201844.jpg  \n","  inflating: train2014/COCO_train2014_000000397832.jpg  \n","  inflating: train2014/COCO_train2014_000000210791.jpg  \n","  inflating: train2014/COCO_train2014_000000258931.jpg  \n","  inflating: train2014/COCO_train2014_000000541949.jpg  \n","  inflating: train2014/COCO_train2014_000000231987.jpg  \n","  inflating: train2014/COCO_train2014_000000536519.jpg  \n","  inflating: train2014/COCO_train2014_000000557118.jpg  \n","  inflating: train2014/COCO_train2014_000000509702.jpg  \n","  inflating: train2014/COCO_train2014_000000009287.jpg  \n","  inflating: train2014/COCO_train2014_000000540464.jpg  \n","  inflating: train2014/COCO_train2014_000000164725.jpg  \n","  inflating: train2014/COCO_train2014_000000103966.jpg  \n","  inflating: train2014/COCO_train2014_000000491981.jpg  \n","  inflating: train2014/COCO_train2014_000000188955.jpg  \n","  inflating: train2014/COCO_train2014_000000305363.jpg  \n","  inflating: train2014/COCO_train2014_000000404554.jpg  \n","  inflating: train2014/COCO_train2014_000000499305.jpg  \n","  inflating: train2014/COCO_train2014_000000435951.jpg  \n","  inflating: train2014/COCO_train2014_000000211464.jpg  \n","  inflating: train2014/COCO_train2014_000000414747.jpg  \n","  inflating: train2014/COCO_train2014_000000189493.jpg  \n","  inflating: train2014/COCO_train2014_000000539819.jpg  \n","  inflating: train2014/COCO_train2014_000000197875.jpg  \n","  inflating: train2014/COCO_train2014_000000206118.jpg  \n","  inflating: train2014/COCO_train2014_000000361829.jpg  \n","  inflating: train2014/COCO_train2014_000000297173.jpg  \n","  inflating: train2014/COCO_train2014_000000062426.jpg  \n","  inflating: train2014/COCO_train2014_000000254138.jpg  \n","  inflating: train2014/COCO_train2014_000000367280.jpg  \n","  inflating: train2014/COCO_train2014_000000053823.jpg  \n","  inflating: train2014/COCO_train2014_000000015876.jpg  \n","  inflating: train2014/COCO_train2014_000000176321.jpg  \n","  inflating: train2014/COCO_train2014_000000242982.jpg  \n","  inflating: train2014/COCO_train2014_000000287360.jpg  \n","  inflating: train2014/COCO_train2014_000000358070.jpg  \n","  inflating: train2014/COCO_train2014_000000140693.jpg  \n","  inflating: train2014/COCO_train2014_000000150480.jpg  \n","  inflating: train2014/COCO_train2014_000000447479.jpg  \n","  inflating: train2014/COCO_train2014_000000054194.jpg  \n","  inflating: train2014/COCO_train2014_000000450105.jpg  \n","  inflating: train2014/COCO_train2014_000000213273.jpg  \n","  inflating: train2014/COCO_train2014_000000161885.jpg  \n","  inflating: train2014/COCO_train2014_000000255226.jpg  \n","  inflating: train2014/COCO_train2014_000000331978.jpg  \n","  inflating: train2014/COCO_train2014_000000512322.jpg  \n","  inflating: train2014/COCO_train2014_000000484354.jpg  \n","  inflating: train2014/COCO_train2014_000000361197.jpg  \n","  inflating: train2014/COCO_train2014_000000129143.jpg  \n","  inflating: train2014/COCO_train2014_000000308121.jpg  \n","  inflating: train2014/COCO_train2014_000000359408.jpg  \n","  inflating: train2014/COCO_train2014_000000524848.jpg  \n","  inflating: train2014/COCO_train2014_000000064731.jpg  \n","  inflating: train2014/COCO_train2014_000000253131.jpg  \n","  inflating: train2014/COCO_train2014_000000287406.jpg  \n","  inflating: train2014/COCO_train2014_000000320875.jpg  \n","  inflating: train2014/COCO_train2014_000000097861.jpg  \n","  inflating: train2014/COCO_train2014_000000297615.jpg  \n","  inflating: train2014/COCO_train2014_000000120601.jpg  \n","  inflating: train2014/COCO_train2014_000000504540.jpg  \n","  inflating: train2014/COCO_train2014_000000417528.jpg  \n","  inflating: train2014/COCO_train2014_000000171328.jpg  \n","  inflating: train2014/COCO_train2014_000000524690.jpg  \n","  inflating: train2014/COCO_train2014_000000033669.jpg  \n","  inflating: train2014/COCO_train2014_000000146584.jpg  \n","  inflating: train2014/COCO_train2014_000000211302.jpg  \n","  inflating: train2014/COCO_train2014_000000342996.jpg  \n","  inflating: train2014/COCO_train2014_000000486543.jpg  \n","  inflating: train2014/COCO_train2014_000000556560.jpg  \n","  inflating: train2014/COCO_train2014_000000390608.jpg  \n","  inflating: train2014/COCO_train2014_000000507049.jpg  \n","  inflating: train2014/COCO_train2014_000000489670.jpg  \n","  inflating: train2014/COCO_train2014_000000397167.jpg  \n","  inflating: train2014/COCO_train2014_000000066126.jpg  \n","  inflating: train2014/COCO_train2014_000000115862.jpg  \n","  inflating: train2014/COCO_train2014_000000069215.jpg  \n","  inflating: train2014/COCO_train2014_000000423855.jpg  \n","  inflating: train2014/COCO_train2014_000000443179.jpg  \n","  inflating: train2014/COCO_train2014_000000526087.jpg  \n","  inflating: train2014/COCO_train2014_000000422593.jpg  \n","  inflating: train2014/COCO_train2014_000000164043.jpg  \n","  inflating: train2014/COCO_train2014_000000413996.jpg  \n","  inflating: train2014/COCO_train2014_000000387360.jpg  \n","  inflating: train2014/COCO_train2014_000000510521.jpg  \n","  inflating: train2014/COCO_train2014_000000388053.jpg  \n","  inflating: train2014/COCO_train2014_000000559647.jpg  \n","  inflating: train2014/COCO_train2014_000000397173.jpg  \n","  inflating: train2014/COCO_train2014_000000124473.jpg  \n","  inflating: train2014/COCO_train2014_000000261829.jpg  \n","  inflating: train2014/COCO_train2014_000000190868.jpg  \n","  inflating: train2014/COCO_train2014_000000404226.jpg  \n","  inflating: train2014/COCO_train2014_000000248263.jpg  \n","  inflating: train2014/COCO_train2014_000000549454.jpg  \n","  inflating: train2014/COCO_train2014_000000163738.jpg  \n","  inflating: train2014/COCO_train2014_000000218454.jpg  \n","  inflating: train2014/COCO_train2014_000000536280.jpg  \n","  inflating: train2014/COCO_train2014_000000050480.jpg  \n","  inflating: train2014/COCO_train2014_000000465814.jpg  \n","  inflating: train2014/COCO_train2014_000000498769.jpg  \n","  inflating: train2014/COCO_train2014_000000487649.jpg  \n","  inflating: train2014/COCO_train2014_000000051946.jpg  \n","  inflating: train2014/COCO_train2014_000000139344.jpg  \n","  inflating: train2014/COCO_train2014_000000416622.jpg  \n","  inflating: train2014/COCO_train2014_000000255554.jpg  \n","  inflating: train2014/COCO_train2014_000000385577.jpg  \n","  inflating: train2014/COCO_train2014_000000126264.jpg  \n","  inflating: train2014/COCO_train2014_000000253125.jpg  \n","  inflating: train2014/COCO_train2014_000000130406.jpg  \n","  inflating: train2014/COCO_train2014_000000383106.jpg  \n","  inflating: train2014/COCO_train2014_000000482731.jpg  \n","  inflating: train2014/COCO_train2014_000000288721.jpg  \n","  inflating: train2014/COCO_train2014_000000147856.jpg  \n","  inflating: train2014/COCO_train2014_000000379914.jpg  \n","  inflating: train2014/COCO_train2014_000000426939.jpg  \n","  inflating: train2014/COCO_train2014_000000504554.jpg  \n","  inflating: train2014/COCO_train2014_000000319038.jpg  \n","  inflating: train2014/COCO_train2014_000000120615.jpg  \n","  inflating: train2014/COCO_train2014_000000243336.jpg  \n","  inflating: train2014/COCO_train2014_000000075628.jpg  \n","  inflating: train2014/COCO_train2014_000000169573.jpg  \n","  inflating: train2014/COCO_train2014_000000478845.jpg  \n","  inflating: train2014/COCO_train2014_000000492244.jpg  \n","  inflating: train2014/COCO_train2014_000000400726.jpg  \n","  inflating: train2014/COCO_train2014_000000166126.jpg  \n","  inflating: train2014/COCO_train2014_000000348277.jpg  \n","  inflating: train2014/COCO_train2014_000000034674.jpg  \n","  inflating: train2014/COCO_train2014_000000176335.jpg  \n","  inflating: train2014/COCO_train2014_000000287374.jpg  \n","  inflating: train2014/COCO_train2014_000000532958.jpg  \n","  inflating: train2014/COCO_train2014_000000410535.jpg  \n","  inflating: train2014/COCO_train2014_000000215616.jpg  \n","  inflating: train2014/COCO_train2014_000000383660.jpg  \n","  inflating: train2014/COCO_train2014_000000427399.jpg  \n","  inflating: train2014/COCO_train2014_000000358064.jpg  \n","  inflating: train2014/COCO_train2014_000000459653.jpg  \n","  inflating: train2014/COCO_train2014_000000290608.jpg  \n","  inflating: train2014/COCO_train2014_000000356049.jpg  \n","  inflating: train2014/COCO_train2014_000000426087.jpg  \n","  inflating: train2014/COCO_train2014_000000409064.jpg  \n","  inflating: train2014/COCO_train2014_000000308653.jpg  \n","  inflating: train2014/COCO_train2014_000000129631.jpg  \n","  inflating: train2014/COCO_train2014_000000081971.jpg  \n","  inflating: train2014/COCO_train2014_000000440302.jpg  \n","  inflating: train2014/COCO_train2014_000000351726.jpg  \n","  inflating: train2014/COCO_train2014_000000450111.jpg  \n","  inflating: train2014/COCO_train2014_000000136711.jpg  \n","  inflating: train2014/COCO_train2014_000000208121.jpg  \n","  inflating: train2014/COCO_train2014_000000531289.jpg  \n","  inflating: train2014/COCO_train2014_000000246528.jpg  \n","  inflating: train2014/COCO_train2014_000000174522.jpg  \n","  inflating: train2014/COCO_train2014_000000285563.jpg  \n","  inflating: train2014/COCO_train2014_000000231978.jpg  \n","  inflating: train2014/COCO_train2014_000000516636.jpg  \n","  inflating: train2014/COCO_train2014_000000528900.jpg  \n","  inflating: train2014/COCO_train2014_000000343322.jpg  \n","  inflating: train2014/COCO_train2014_000000077981.jpg  \n","  inflating: train2014/COCO_train2014_000000560978.jpg  \n","  inflating: train2014/COCO_train2014_000000020601.jpg  \n","  inflating: train2014/COCO_train2014_000000071328.jpg  \n","  inflating: train2014/COCO_train2014_000000473910.jpg  \n","  inflating: train2014/COCO_train2014_000000405886.jpg  \n","  inflating: train2014/COCO_train2014_000000452706.jpg  \n","  inflating: train2014/COCO_train2014_000000530197.jpg  \n","  inflating: train2014/COCO_train2014_000000266820.jpg  \n","  inflating: train2014/COCO_train2014_000000581204.jpg  \n","  inflating: train2014/COCO_train2014_000000171472.jpg  \n","  inflating: train2014/COCO_train2014_000000513766.jpg  \n","  inflating: train2014/COCO_train2014_000000418141.jpg  \n","  inflating: train2014/COCO_train2014_000000441034.jpg  \n","  inflating: train2014/COCO_train2014_000000503575.jpg  \n","  inflating: train2014/COCO_train2014_000000407061.jpg  \n","  inflating: train2014/COCO_train2014_000000290620.jpg  \n","  inflating: train2014/COCO_train2014_000000338960.jpg  \n","  inflating: train2014/COCO_train2014_000000225925.jpg  \n","  inflating: train2014/COCO_train2014_000000004947.jpg  \n","  inflating: train2014/COCO_train2014_000000263970.jpg  \n","  inflating: train2014/COCO_train2014_000000192931.jpg  \n","  inflating: train2014/COCO_train2014_000000370918.jpg  \n","  inflating: train2014/COCO_train2014_000000411603.jpg  \n","  inflating: train2014/COCO_train2014_000000286042.jpg  \n","  inflating: train2014/COCO_train2014_000000457656.jpg  \n","  inflating: train2014/COCO_train2014_000000356061.jpg  \n","  inflating: train2014/COCO_train2014_000000385239.jpg  \n","  inflating: train2014/COCO_train2014_000000101195.jpg  \n","  inflating: train2014/COCO_train2014_000000318468.jpg  \n","  inflating: train2014/COCO_train2014_000000383890.jpg  \n","  inflating: train2014/COCO_train2014_000000346272.jpg  \n","  inflating: train2014/COCO_train2014_000000505104.jpg  \n","  inflating: train2014/COCO_train2014_000000034884.jpg  \n","  inflating: train2014/COCO_train2014_000000488234.jpg  \n","  inflating: train2014/COCO_train2014_000000259420.jpg  \n","  inflating: train2014/COCO_train2014_000000058792.jpg  \n","  inflating: train2014/COCO_train2014_000000201893.jpg  \n","  inflating: train2014/COCO_train2014_000000186944.jpg  \n","  inflating: train2014/COCO_train2014_000000355568.jpg  \n","  inflating: train2014/COCO_train2014_000000499339.jpg  \n","  inflating: train2014/COCO_train2014_000000133641.jpg  \n","  inflating: train2014/COCO_train2014_000000541746.jpg  \n","  inflating: train2014/COCO_train2014_000000211458.jpg  \n","  inflating: train2014/COCO_train2014_000000084821.jpg  \n","  inflating: train2014/COCO_train2014_000000061675.jpg  \n","  inflating: train2014/COCO_train2014_000000114598.jpg  \n","  inflating: train2014/COCO_train2014_000000432964.jpg  \n","  inflating: train2014/COCO_train2014_000000134648.jpg  \n","  inflating: train2014/COCO_train2014_000000284133.jpg  \n","  inflating: train2014/COCO_train2014_000000037433.jpg  \n","  inflating: train2014/COCO_train2014_000000538285.jpg  \n","  inflating: train2014/COCO_train2014_000000085281.jpg  \n","  inflating: train2014/COCO_train2014_000000219762.jpg  \n","  inflating: train2014/COCO_train2014_000000283884.jpg  \n","  inflating: train2014/COCO_train2014_000000292751.jpg  \n","  inflating: train2014/COCO_train2014_000000104953.jpg  \n","  inflating: train2014/COCO_train2014_000000577592.jpg  \n","  inflating: train2014/COCO_train2014_000000259346.jpg  \n","  inflating: train2014/COCO_train2014_000000256075.jpg  \n","  inflating: train2014/COCO_train2014_000000352561.jpg  \n","  inflating: train2014/COCO_train2014_000000213529.jpg  \n","  inflating: train2014/COCO_train2014_000000179990.jpg  \n","  inflating: train2014/COCO_train2014_000000110926.jpg  \n","  inflating: train2014/COCO_train2014_000000097685.jpg  \n","  inflating: train2014/COCO_train2014_000000310752.jpg  \n","  inflating: train2014/COCO_train2014_000000286724.jpg  \n","  inflating: train2014/COCO_train2014_000000158786.jpg  \n","  inflating: train2014/COCO_train2014_000000564288.jpg  \n","  inflating: train2014/COCO_train2014_000000244471.jpg  \n","  inflating: train2014/COCO_train2014_000000184835.jpg  \n","  inflating: train2014/COCO_train2014_000000137341.jpg  \n","  inflating: train2014/COCO_train2014_000000384641.jpg  \n","  inflating: train2014/COCO_train2014_000000542529.jpg  \n","  inflating: train2014/COCO_train2014_000000426911.jpg  \n","  inflating: train2014/COCO_train2014_000000580668.jpg  \n","  inflating: train2014/COCO_train2014_000000255568.jpg  \n","  inflating: train2014/COCO_train2014_000000320685.jpg  \n","  inflating: train2014/COCO_train2014_000000193385.jpg  \n","  inflating: train2014/COCO_train2014_000000401362.jpg  \n","  inflating: train2014/COCO_train2014_000000204041.jpg  \n","  inflating: train2014/COCO_train2014_000000395758.jpg  \n","  inflating: train2014/COCO_train2014_000000562835.jpg  \n","  inflating: train2014/COCO_train2014_000000359420.jpg  \n","  inflating: train2014/COCO_train2014_000000214252.jpg  \n","  inflating: train2014/COCO_train2014_000000437808.jpg  \n","  inflating: train2014/COCO_train2014_000000368825.jpg  \n","  inflating: train2014/COCO_train2014_000000035230.jpg  \n","  inflating: train2014/COCO_train2014_000000411171.jpg  \n","  inflating: train2014/COCO_train2014_000000097849.jpg  \n","  inflating: train2014/COCO_train2014_000000244465.jpg  \n","  inflating: train2014/COCO_train2014_000000340171.jpg  \n","  inflating: train2014/COCO_train2014_000000450893.jpg  \n","  inflating: train2014/COCO_train2014_000000065407.jpg  \n","  inflating: train2014/COCO_train2014_000000461496.jpg  \n","  inflating: train2014/COCO_train2014_000000128275.jpg  \n","  inflating: train2014/COCO_train2014_000000003782.jpg  \n","  inflating: train2014/COCO_train2014_000000075614.jpg  \n","  inflating: train2014/COCO_train2014_000000575391.jpg  \n","  inflating: train2014/COCO_train2014_000000460950.jpg  \n","  inflating: train2014/COCO_train2014_000000238960.jpg  \n","  inflating: train2014/COCO_train2014_000000206656.jpg  \n","  inflating: train2014/COCO_train2014_000000283648.jpg  \n","  inflating: train2014/COCO_train2014_000000191592.jpg  \n","  inflating: train2014/COCO_train2014_000000538291.jpg  \n","  inflating: train2014/COCO_train2014_000000551227.jpg  \n","  inflating: train2014/COCO_train2014_000000284127.jpg  \n","  inflating: train2014/COCO_train2014_000000227840.jpg  \n","  inflating: train2014/COCO_train2014_000000036739.jpg  \n","  inflating: train2014/COCO_train2014_000000399162.jpg  \n","  inflating: train2014/COCO_train2014_000000249141.jpg  \n","  inflating: train2014/COCO_train2014_000000342766.jpg  \n","  inflating: train2014/COCO_train2014_000000577586.jpg  \n","  inflating: train2014/COCO_train2014_000000345009.jpg  \n","  inflating: train2014/COCO_train2014_000000115692.jpg  \n","  inflating: train2014/COCO_train2014_000000077003.jpg  \n","  inflating: train2014/COCO_train2014_000000256061.jpg  \n","  inflating: train2014/COCO_train2014_000000259434.jpg  \n","  inflating: train2014/COCO_train2014_000000391258.jpg  \n","  inflating: train2014/COCO_train2014_000000352213.jpg  \n","  inflating: train2014/COCO_train2014_000000453424.jpg  \n","  inflating: train2014/COCO_train2014_000000386724.jpg  \n","  inflating: train2014/COCO_train2014_000000210752.jpg  \n","  inflating: train2014/COCO_train2014_000000511165.jpg  \n","  inflating: train2014/COCO_train2014_000000102488.jpg  \n","  inflating: train2014/COCO_train2014_000000314246.jpg  \n","  inflating: train2014/COCO_train2014_000000256707.jpg  \n","  inflating: train2014/COCO_train2014_000000548010.jpg  \n","  inflating: train2014/COCO_train2014_000000405662.jpg  \n","  inflating: train2014/COCO_train2014_000000048595.jpg  \n","  inflating: train2014/COCO_train2014_000000175600.jpg  \n","  inflating: train2014/COCO_train2014_000000066668.jpg  \n","  inflating: train2014/COCO_train2014_000000526911.jpg  \n","  inflating: train2014/COCO_train2014_000000518627.jpg  \n","  inflating: train2014/COCO_train2014_000000302424.jpg  \n","  inflating: train2014/COCO_train2014_000000209203.jpg  \n","  inflating: train2014/COCO_train2014_000000465196.jpg  \n","  inflating: train2014/COCO_train2014_000000028261.jpg  \n","  inflating: train2014/COCO_train2014_000000169229.jpg  \n","  inflating: train2014/COCO_train2014_000000033127.jpg  \n","  inflating: train2014/COCO_train2014_000000418155.jpg  \n","  inflating: train2014/COCO_train2014_000000205439.jpg  \n","  inflating: train2014/COCO_train2014_000000185281.jpg  \n","  inflating: train2014/COCO_train2014_000000106836.jpg  \n","  inflating: train2014/COCO_train2014_000000545534.jpg  \n","  inflating: train2014/COCO_train2014_000000317997.jpg  \n","  inflating: train2014/COCO_train2014_000000503561.jpg  \n","  inflating: train2014/COCO_train2014_000000119916.jpg  \n","  inflating: train2014/COCO_train2014_000000127620.jpg  \n","  inflating: train2014/COCO_train2014_000000222086.jpg  \n","  inflating: train2014/COCO_train2014_000000410509.jpg  \n","  inflating: train2014/COCO_train2014_000000225931.jpg  \n","  inflating: train2014/COCO_train2014_000000359346.jpg  \n","  inflating: train2014/COCO_train2014_000000409058.jpg  \n","  inflating: train2014/COCO_train2014_000000336959.jpg  \n","  inflating: train2014/COCO_train2014_000000411617.jpg  \n","  inflating: train2014/COCO_train2014_000000310020.jpg  \n","  inflating: train2014/COCO_train2014_000000554439.jpg  \n","  inflating: train2014/COCO_train2014_000000346266.jpg  \n","  inflating: train2014/COCO_train2014_000000383884.jpg  \n","  inflating: train2014/COCO_train2014_000000369285.jpg  \n","  inflating: train2014/COCO_train2014_000000573509.jpg  \n","  inflating: train2014/COCO_train2014_000000361356.jpg  \n","  inflating: train2014/COCO_train2014_000000090317.jpg  \n","  inflating: train2014/COCO_train2014_000000065836.jpg  \n","  inflating: train2014/COCO_train2014_000000224178.jpg  \n","  inflating: train2014/COCO_train2014_000000150127.jpg  \n","  inflating: train2014/COCO_train2014_000000233404.jpg  \n","  inflating: train2014/COCO_train2014_000000156556.jpg  \n","  inflating: train2014/COCO_train2014_000000014017.jpg  \n","  inflating: train2014/COCO_train2014_000000476303.jpg  \n","  inflating: train2014/COCO_train2014_000000091009.jpg  \n","  inflating: train2014/COCO_train2014_000000520637.jpg  \n","  inflating: train2014/COCO_train2014_000000363541.jpg  \n","  inflating: train2014/COCO_train2014_000000267055.jpg  \n","  inflating: train2014/COCO_train2014_000000343691.jpg  \n","  inflating: train2014/COCO_train2014_000000186207.jpg  \n","  inflating: train2014/COCO_train2014_000000061488.jpg  \n","  inflating: train2014/COCO_train2014_000000103219.jpg  \n","  inflating: train2014/COCO_train2014_000000257196.jpg  \n","  inflating: train2014/COCO_train2014_000000187119.jpg  \n","  inflating: train2014/COCO_train2014_000000343849.jpg  \n","  inflating: train2014/COCO_train2014_000000412691.jpg  \n","  inflating: train2014/COCO_train2014_000000333376.jpg  \n","  inflating: train2014/COCO_train2014_000000536055.jpg  \n","  inflating: train2014/COCO_train2014_000000480495.jpg  \n","  inflating: train2014/COCO_train2014_000000294863.jpg  \n","  inflating: train2014/COCO_train2014_000000016166.jpg  \n","  inflating: train2014/COCO_train2014_000000039185.jpg  \n","  inflating: train2014/COCO_train2014_000000508805.jpg  \n","  inflating: train2014/COCO_train2014_000000435548.jpg  \n","  inflating: train2014/COCO_train2014_000000529613.jpg  \n","  inflating: train2014/COCO_train2014_000000261342.jpg  \n","  inflating: train2014/COCO_train2014_000000576317.jpg  \n","  inflating: train2014/COCO_train2014_000000152056.jpg  \n","  inflating: train2014/COCO_train2014_000000530342.jpg  \n","  inflating: train2014/COCO_train2014_000000095509.jpg  \n","  inflating: train2014/COCO_train2014_000000142245.jpg  \n","  inflating: train2014/COCO_train2014_000000404795.jpg  \n","  inflating: train2014/COCO_train2014_000000155739.jpg  \n","  inflating: train2014/COCO_train2014_000000500281.jpg  \n","  inflating: train2014/COCO_train2014_000000453815.jpg  \n","  inflating: train2014/COCO_train2014_000000572171.jpg  \n","  inflating: train2014/COCO_train2014_000000262893.jpg  \n","  inflating: train2014/COCO_train2014_000000235713.jpg  \n","  inflating: train2014/COCO_train2014_000000534124.jpg  \n","  inflating: train2014/COCO_train2014_000000086213.jpg  \n","  inflating: train2014/COCO_train2014_000000377252.jpg  \n","  inflating: train2014/COCO_train2014_000000476465.jpg  \n","  inflating: train2014/COCO_train2014_000000401835.jpg  \n","  inflating: train2014/COCO_train2014_000000298081.jpg  \n","  inflating: train2014/COCO_train2014_000000469545.jpg  \n","  inflating: train2014/COCO_train2014_000000043629.jpg  \n","  inflating: train2014/COCO_train2014_000000141994.jpg  \n","  inflating: train2014/COCO_train2014_000000150641.jpg  \n","  inflating: train2014/COCO_train2014_000000128922.jpg  \n","  inflating: train2014/COCO_train2014_000000532555.jpg  \n","  inflating: train2014/COCO_train2014_000000470014.jpg  \n","  inflating: train2014/COCO_train2014_000000426252.jpg  \n","  inflating: train2014/COCO_train2014_000000205808.jpg  \n","  inflating: train2014/COCO_train2014_000000478448.jpg  \n","  inflating: train2014/COCO_train2014_000000308486.jpg  \n","  inflating: train2014/COCO_train2014_000000534130.jpg  \n","  inflating: train2014/COCO_train2014_000000572165.jpg  \n","  inflating: train2014/COCO_train2014_000000401821.jpg  \n","  inflating: train2014/COCO_train2014_000000482296.jpg  \n","  inflating: train2014/COCO_train2014_000000003219.jpg  \n","  inflating: train2014/COCO_train2014_000000192500.jpg  \n","  inflating: train2014/COCO_train2014_000000466662.jpg  \n","  inflating: train2014/COCO_train2014_000000449681.jpg  \n","  inflating: train2014/COCO_train2014_000000439366.jpg  \n","  inflating: train2014/COCO_train2014_000000421529.jpg  \n","  inflating: train2014/COCO_train2014_000000054341.jpg  \n","  inflating: train2014/COCO_train2014_000000369078.jpg  \n","  inflating: train2014/COCO_train2014_000000318681.jpg  \n","  inflating: train2014/COCO_train2014_000000456979.jpg  \n","  inflating: train2014/COCO_train2014_000000502482.jpg  \n","  inflating: train2014/COCO_train2014_000000449859.jpg  \n","  inflating: train2014/COCO_train2014_000000406196.jpg  \n","  inflating: train2014/COCO_train2014_000000564707.jpg  \n","  inflating: train2014/COCO_train2014_000000426246.jpg  \n","  inflating: train2014/COCO_train2014_000000223165.jpg  \n","  inflating: train2014/COCO_train2014_000000294877.jpg  \n","  inflating: train2014/COCO_train2014_000000344854.jpg  \n","  inflating: train2014/COCO_train2014_000000238223.jpg  \n","  inflating: train2014/COCO_train2014_000000237110.jpg  \n","  inflating: train2014/COCO_train2014_000000432233.jpg  \n","  inflating: train2014/COCO_train2014_000000039191.jpg  \n","  inflating: train2014/COCO_train2014_000000517931.jpg  \n","  inflating: train2014/COCO_train2014_000000560561.jpg  \n","  inflating: train2014/COCO_train2014_000000144620.jpg  \n","  inflating: train2014/COCO_train2014_000000422020.jpg  \n","  inflating: train2014/COCO_train2014_000000526534.jpg  \n","  inflating: train2014/COCO_train2014_000000040334.jpg  \n","  inflating: train2014/COCO_train2014_000000464075.jpg  \n","  inflating: train2014/COCO_train2014_000000472617.jpg  \n","  inflating: train2014/COCO_train2014_000000198993.jpg  \n","  inflating: train2014/COCO_train2014_000000172392.jpg  \n","  inflating: train2014/COCO_train2014_000000414592.jpg  \n","  inflating: train2014/COCO_train2014_000000189646.jpg  \n","  inflating: train2014/COCO_train2014_000000196766.jpg  \n","  inflating: train2014/COCO_train2014_000000259811.jpg  \n","  inflating: train2014/COCO_train2014_000000462404.jpg  \n","  inflating: train2014/COCO_train2014_000000453801.jpg  \n","  inflating: train2014/COCO_train2014_000000569223.jpg  \n","  inflating: train2014/COCO_train2014_000000162181.jpg  \n","  inflating: train2014/COCO_train2014_000000424337.jpg  \n","  inflating: train2014/COCO_train2014_000000046023.jpg  \n","  inflating: train2014/COCO_train2014_000000268372.jpg  \n","  inflating: train2014/COCO_train2014_000000236568.jpg  \n","  inflating: train2014/COCO_train2014_000000559486.jpg  \n","  inflating: train2014/COCO_train2014_000000010265.jpg  \n","  inflating: train2014/COCO_train2014_000000152724.jpg  \n","  inflating: train2014/COCO_train2014_000000335713.jpg  \n","  inflating: train2014/COCO_train2014_000000561119.jpg  \n","  inflating: train2014/COCO_train2014_000000558798.jpg  \n","  inflating: train2014/COCO_train2014_000000372458.jpg  \n","  inflating: train2014/COCO_train2014_000000006407.jpg  \n","  inflating: train2014/COCO_train2014_000000539372.jpg  \n","  inflating: train2014/COCO_train2014_000000143629.jpg  \n","  inflating: train2014/COCO_train2014_000000536041.jpg  \n","  inflating: train2014/COCO_train2014_000000429613.jpg  \n","  inflating: train2014/COCO_train2014_000000140320.jpg  \n","  inflating: train2014/COCO_train2014_000000460575.jpg  \n","  inflating: train2014/COCO_train2014_000000223603.jpg  \n","  inflating: train2014/COCO_train2014_000000522034.jpg  \n","  inflating: train2014/COCO_train2014_000000439400.jpg  \n","  inflating: train2014/COCO_train2014_000000320478.jpg  \n","  inflating: train2014/COCO_train2014_000000532227.jpg  \n","  inflating: train2014/COCO_train2014_000000054427.jpg  \n","  inflating: train2014/COCO_train2014_000000116166.jpg  \n","  inflating: train2014/COCO_train2014_000000012472.jpg  \n","  inflating: train2014/COCO_train2014_000000337104.jpg  \n","  inflating: train2014/COCO_train2014_000000146751.jpg  \n","  inflating: train2014/COCO_train2014_000000420151.jpg  \n","  inflating: train2014/COCO_train2014_000000321766.jpg  \n","  inflating: train2014/COCO_train2014_000000192266.jpg  \n","  inflating: train2014/COCO_train2014_000000339129.jpg  \n","  inflating: train2014/COCO_train2014_000000042245.jpg  \n","  inflating: train2014/COCO_train2014_000000359805.jpg  \n","  inflating: train2014/COCO_train2014_000000469237.jpg  \n","  inflating: train2014/COCO_train2014_000000062195.jpg  \n","  inflating: train2014/COCO_train2014_000000166481.jpg  \n","  inflating: train2014/COCO_train2014_000000235061.jpg  \n","Archive:  /content/drive/My Drive/Video_Captioner/Data/val2014.zip\n","   creating: val2014/\n","  inflating: val2014/COCO_val2014_000000265550.jpg  \n","  inflating: val2014/COCO_val2014_000000106073.jpg  \n","  inflating: val2014/COCO_val2014_000000109340.jpg  \n","  inflating: val2014/COCO_val2014_000000150235.jpg  \n","  inflating: val2014/COCO_val2014_000000099747.jpg  \n","  inflating: val2014/COCO_val2014_000000286813.jpg  \n","  inflating: val2014/COCO_val2014_000000146457.jpg  \n","  inflating: val2014/COCO_val2014_000000493923.jpg  \n","  inflating: val2014/COCO_val2014_000000378515.jpg  \n","  inflating: val2014/COCO_val2014_000000377626.jpg  \n","  inflating: val2014/COCO_val2014_000000520525.jpg  \n","  inflating: val2014/COCO_val2014_000000189226.jpg  \n","  inflating: val2014/COCO_val2014_000000373440.jpg  \n","  inflating: val2014/COCO_val2014_000000038837.jpg  \n","  inflating: val2014/COCO_val2014_000000006701.jpg  \n","  inflating: val2014/COCO_val2014_000000228450.jpg  \n","  inflating: val2014/COCO_val2014_000000048308.jpg  \n","  inflating: val2014/COCO_val2014_000000353948.jpg  \n","  inflating: val2014/COCO_val2014_000000154053.jpg  \n","  inflating: val2014/COCO_val2014_000000027917.jpg  \n","  inflating: val2014/COCO_val2014_000000180202.jpg  \n","  inflating: val2014/COCO_val2014_000000238125.jpg  \n","  inflating: val2014/COCO_val2014_000000261050.jpg  \n","  inflating: val2014/COCO_val2014_000000422326.jpg  \n","  inflating: val2014/COCO_val2014_000000372038.jpg  \n","  inflating: val2014/COCO_val2014_000000172094.jpg  \n","  inflating: val2014/COCO_val2014_000000082367.jpg  \n","  inflating: val2014/COCO_val2014_000000354799.jpg  \n","  inflating: val2014/COCO_val2014_000000204804.jpg  \n","  inflating: val2014/COCO_val2014_000000263647.jpg  \n","  inflating: val2014/COCO_val2014_000000275025.jpg  \n","  inflating: val2014/COCO_val2014_000000340934.jpg  \n","  inflating: val2014/COCO_val2014_000000194277.jpg  \n","  inflating: val2014/COCO_val2014_000000327777.jpg  \n","  inflating: val2014/COCO_val2014_000000091469.jpg  \n","  inflating: val2014/COCO_val2014_000000182401.jpg  \n","  inflating: val2014/COCO_val2014_000000466570.jpg  \n","  inflating: val2014/COCO_val2014_000000096306.jpg  \n","  inflating: val2014/COCO_val2014_000000420525.jpg  \n","  inflating: val2014/COCO_val2014_000000154721.jpg  \n","  inflating: val2014/COCO_val2014_000000480793.jpg  \n","  inflating: val2014/COCO_val2014_000000529515.jpg  \n","  inflating: val2014/COCO_val2014_000000414680.jpg  \n","  inflating: val2014/COCO_val2014_000000550968.jpg  \n","  inflating: val2014/COCO_val2014_000000250299.jpg  \n","  inflating: val2014/COCO_val2014_000000435896.jpg  \n","  inflating: val2014/COCO_val2014_000000040998.jpg  \n","  inflating: val2014/COCO_val2014_000000520531.jpg  \n","  inflating: val2014/COCO_val2014_000000046331.jpg  \n","  inflating: val2014/COCO_val2014_000000413689.jpg  \n","  inflating: val2014/COCO_val2014_000000486484.jpg  \n","  inflating: val2014/COCO_val2014_000000219841.jpg  \n","  inflating: val2014/COCO_val2014_000000323263.jpg  \n","  inflating: val2014/COCO_val2014_000000038823.jpg  \n","  inflating: val2014/COCO_val2014_000000009426.jpg  \n","  inflating: val2014/COCO_val2014_000000011269.jpg  \n","  inflating: val2014/COCO_val2014_000000432647.jpg  \n","  inflating: val2014/COCO_val2014_000000084064.jpg  \n","  inflating: val2014/COCO_val2014_000000218587.jpg  \n","  inflating: val2014/COCO_val2014_000000315909.jpg  \n","  inflating: val2014/COCO_val2014_000000090011.jpg  \n","  inflating: val2014/COCO_val2014_000000327005.jpg  \n","  inflating: val2014/COCO_val2014_000000075923.jpg  \n","  inflating: val2014/COCO_val2014_000000371243.jpg  \n","  inflating: val2014/COCO_val2014_000000149770.jpg  \n","  inflating: val2014/COCO_val2014_000000274449.jpg  \n","  inflating: val2014/COCO_val2014_000000504487.jpg  \n","  inflating: val2014/COCO_val2014_000000410380.jpg  \n","  inflating: val2014/COCO_val2014_000000331667.jpg  \n","  inflating: val2014/COCO_val2014_000000476005.jpg  \n","  inflating: val2014/COCO_val2014_000000029906.jpg  \n","  inflating: val2014/COCO_val2014_000000381832.jpg  \n","  inflating: val2014/COCO_val2014_000000561223.jpg  \n","  inflating: val2014/COCO_val2014_000000059239.jpg  \n","  inflating: val2014/COCO_val2014_000000011241.jpg  \n","  inflating: val2014/COCO_val2014_000000531414.jpg  \n","  inflating: val2014/COCO_val2014_000000104880.jpg  \n","  inflating: val2014/COCO_val2014_000000279145.jpg  \n","  inflating: val2014/COCO_val2014_000000576987.jpg  \n","  inflating: val2014/COCO_val2014_000000021382.jpg  \n","  inflating: val2014/COCO_val2014_000000333058.jpg  \n","  inflating: val2014/COCO_val2014_000000043261.jpg  \n","  inflating: val2014/COCO_val2014_000000012748.jpg  \n","  inflating: val2014/COCO_val2014_000000204186.jpg  \n","  inflating: val2014/COCO_val2014_000000370175.jpg  \n","  inflating: val2014/COCO_val2014_000000565045.jpg  \n","  inflating: val2014/COCO_val2014_000000360400.jpg  \n","  inflating: val2014/COCO_val2014_000000045176.jpg  \n","  inflating: val2014/COCO_val2014_000000466558.jpg  \n","  inflating: val2014/COCO_val2014_000000316596.jpg  \n","  inflating: val2014/COCO_val2014_000000418092.jpg  \n","  inflating: val2014/COCO_val2014_000000411908.jpg  \n","  inflating: val2014/COCO_val2014_000000224530.jpg  \n","  inflating: val2014/COCO_val2014_000000262565.jpg  \n","  inflating: val2014/COCO_val2014_000000253960.jpg  \n","  inflating: val2014/COCO_val2014_000000543082.jpg  \n","  inflating: val2014/COCO_val2014_000000447596.jpg  \n","  inflating: val2014/COCO_val2014_000000330237.jpg  \n","  inflating: val2014/COCO_val2014_000000446850.jpg  \n","  inflating: val2014/COCO_val2014_000000478766.jpg  \n","  inflating: val2014/COCO_val2014_000000460129.jpg  \n","  inflating: val2014/COCO_val2014_000000158133.jpg  \n","  inflating: val2014/COCO_val2014_000000105220.jpg  \n","  inflating: val2014/COCO_val2014_000000425475.jpg  \n","  inflating: val2014/COCO_val2014_000000143275.jpg  \n","  inflating: val2014/COCO_val2014_000000570448.jpg  \n","  inflating: val2014/COCO_val2014_000000115033.jpg  \n","  inflating: val2014/COCO_val2014_000000083045.jpg  \n","  inflating: val2014/COCO_val2014_000000049994.jpg  \n","  inflating: val2014/COCO_val2014_000000294595.jpg  \n","  inflating: val2014/COCO_val2014_000000229014.jpg  \n","  inflating: val2014/COCO_val2014_000000527510.jpg  \n","  inflating: val2014/COCO_val2014_000000145604.jpg  \n","  inflating: val2014/COCO_val2014_000000085434.jpg  \n","  inflating: val2014/COCO_val2014_000000197756.jpg  \n","  inflating: val2014/COCO_val2014_000000047775.jpg  \n","  inflating: val2014/COCO_val2014_000000105234.jpg  \n","  inflating: val2014/COCO_val2014_000000200492.jpg  \n","  inflating: val2014/COCO_val2014_000000568213.jpg  \n","  inflating: val2014/COCO_val2014_000000304186.jpg  \n","  inflating: val2014/COCO_val2014_000000153072.jpg  \n","  inflating: val2014/COCO_val2014_000000058655.jpg  \n","  inflating: val2014/COCO_val2014_000000229000.jpg  \n","  inflating: val2014/COCO_val2014_000000527504.jpg  \n","  inflating: val2014/COCO_val2014_000000270175.jpg  \n","  inflating: val2014/COCO_val2014_000000542388.jpg  \n","  inflating: val2014/COCO_val2014_000000308964.jpg  \n","  inflating: val2014/COCO_val2014_000000306949.jpg  \n","  inflating: val2014/COCO_val2014_000000477441.jpg  \n","  inflating: val2014/COCO_val2014_000000157214.jpg  \n","  inflating: val2014/COCO_val2014_000000158127.jpg  \n","  inflating: val2014/COCO_val2014_000000158641.jpg  \n","  inflating: val2014/COCO_val2014_000000331883.jpg  \n","  inflating: val2014/COCO_val2014_000000533217.jpg  \n","  inflating: val2014/COCO_val2014_000000471756.jpg  \n","  inflating: val2014/COCO_val2014_000000469119.jpg  \n","  inflating: val2014/COCO_val2014_000000441695.jpg  \n","  inflating: val2014/COCO_val2014_000000329014.jpg  \n","  inflating: val2014/COCO_val2014_000000290081.jpg  \n","  inflating: val2014/COCO_val2014_000000239575.jpg  \n","  inflating: val2014/COCO_val2014_000000322141.jpg  \n","  inflating: val2014/COCO_val2014_000000095155.jpg  \n","  inflating: val2014/COCO_val2014_000000557785.jpg  \n","  inflating: val2014/COCO_val2014_000000058133.jpg  \n","  inflating: val2014/COCO_val2014_000000105552.jpg  \n","  inflating: val2014/COCO_val2014_000000521613.jpg  \n","  inflating: val2014/COCO_val2014_000000048320.jpg  \n","  inflating: val2014/COCO_val2014_000000021396.jpg  \n","  inflating: val2014/COCO_val2014_000000237558.jpg  \n","  inflating: val2014/COCO_val2014_000000526197.jpg  \n","  inflating: val2014/COCO_val2014_000000396369.jpg  \n","  inflating: val2014/COCO_val2014_000000154090.jpg  \n","  inflating: val2014/COCO_val2014_000000381615.jpg  \n","  inflating: val2014/COCO_val2014_000000550001.jpg  \n","  inflating: val2014/COCO_val2014_000000030270.jpg  \n","  inflating: val2014/COCO_val2014_000000390718.jpg  \n","  inflating: val2014/COCO_val2014_000000277197.jpg  \n","  inflating: val2014/COCO_val2014_000000388157.jpg  \n","  inflating: val2014/COCO_val2014_000000062250.jpg  \n","  inflating: val2014/COCO_val2014_000000184919.jpg  \n","  inflating: val2014/COCO_val2014_000000495349.jpg  \n","  inflating: val2014/COCO_val2014_000000156687.jpg  \n","  inflating: val2014/COCO_val2014_000000358606.jpg  \n","  inflating: val2014/COCO_val2014_000000064621.jpg  \n","  inflating: val2014/COCO_val2014_000000264855.jpg  \n","  inflating: val2014/COCO_val2014_000000385473.jpg  \n","  inflating: val2014/COCO_val2014_000000136173.jpg  \n","  inflating: val2014/COCO_val2014_000000447569.jpg  \n","  inflating: val2014/COCO_val2014_000000108923.jpg  \n","  inflating: val2014/COCO_val2014_000000281601.jpg  \n","  inflating: val2014/COCO_val2014_000000170640.jpg  \n","  inflating: val2014/COCO_val2014_000000252459.jpg  \n","  inflating: val2014/COCO_val2014_000000129735.jpg  \n","  inflating: val2014/COCO_val2014_000000140783.jpg  \n","  inflating: val2014/COCO_val2014_000000022112.jpg  \n","  inflating: val2014/COCO_val2014_000000291412.jpg  \n","  inflating: val2014/COCO_val2014_000000406253.jpg  \n","  inflating: val2014/COCO_val2014_000000494731.jpg  \n","  inflating: val2014/COCO_val2014_000000311206.jpg  \n","  inflating: val2014/COCO_val2014_000000179102.jpg  \n","  inflating: val2014/COCO_val2014_000000421834.jpg  \n","  inflating: val2014/COCO_val2014_000000459757.jpg  \n","  inflating: val2014/COCO_val2014_000000377183.jpg  \n","  inflating: val2014/COCO_val2014_000000170898.jpg  \n","  inflating: val2014/COCO_val2014_000000581328.jpg  \n","  inflating: val2014/COCO_val2014_000000028359.jpg  \n","  inflating: val2014/COCO_val2014_000000510343.jpg  \n","  inflating: val2014/COCO_val2014_000000172057.jpg  \n","  inflating: val2014/COCO_val2014_000000364699.jpg  \n","  inflating: val2014/COCO_val2014_000000404444.jpg  \n","  inflating: val2014/COCO_val2014_000000497238.jpg  \n","  inflating: val2014/COCO_val2014_000000516732.jpg  \n","  inflating: val2014/COCO_val2014_000000381173.jpg  \n","  inflating: val2014/COCO_val2014_000000026374.jpg  \n","  inflating: val2014/COCO_val2014_000000164635.jpg  \n","  inflating: val2014/COCO_val2014_000000211560.jpg  \n","  inflating: val2014/COCO_val2014_000000134016.jpg  \n","  inflating: val2014/COCO_val2014_000000240049.jpg  \n","  inflating: val2014/COCO_val2014_000000077891.jpg  \n","  inflating: val2014/COCO_val2014_000000397705.jpg  \n","  inflating: val2014/COCO_val2014_000000355450.jpg  \n","--2020-10-15 18:02:57--  http://cs.stanford.edu/people/karpathy/deepimagesent/caption_datasets.zip\n","Resolving cs.stanford.edu (cs.stanford.edu)... 171.64.64.64\n","Connecting to cs.stanford.edu (cs.stanford.edu)|171.64.64.64|:80... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://cs.stanford.edu/people/karpathy/deepimagesent/caption_datasets.zip [following]\n","--2020-10-15 18:02:57--  https://cs.stanford.edu/people/karpathy/deepimagesent/caption_datasets.zip\n","Connecting to cs.stanford.edu (cs.stanford.edu)|171.64.64.64|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 36745453 (35M) [application/zip]\n","Saving to: â€˜caption_datasets.zipâ€™\n","\n","caption_datasets.zi 100%[===================>]  35.04M  7.51MB/s    in 4.6s    \n","\n","2020-10-15 18:03:02 (7.56 MB/s) - â€˜caption_datasets.zipâ€™ saved [36745453/36745453]\n","\n","Archive:  caption_datasets.zip\n","  inflating: dataset_coco.json       \n","  inflating: dataset_flickr30k.json  \n","  inflating: dataset_flickr8k.json   \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_5Z5vtSSnnLN","executionInfo":{"status":"ok","timestamp":1602785177685,"user_tz":240,"elapsed":441,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}}},"source":["# Datasets:\n","#   train2014 is a folder of image files for training\n","#   val2014 is a folder of image files for validation\n","#   dataset_coco.json is a JSON file that tells you {image -> captions}"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9Va2JtIOomk0"},"source":["#Data preprocessing *"]},{"cell_type":"code","metadata":{"id":"92LVl2M6q-NH","executionInfo":{"status":"ok","timestamp":1602785184642,"user_tz":240,"elapsed":4320,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}}},"source":["import os\n","import numpy as np\n","import h5py\n","import json\n","import torch\n","from PIL import Image\n","from tqdm import tqdm\n","from collections import Counter\n","from random import seed, choice, sample\n","import cv2"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"78RzSgTmo1eL"},"source":["## Data loading *\n"]},{"cell_type":"code","metadata":{"id":"pZwfFwbgo5qW","executionInfo":{"status":"ok","timestamp":1602785187930,"user_tz":240,"elapsed":5624,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}},"outputId":"213bbd00-a124-4a1c-b024-e3b56214c9de","colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["# Load JSON file into dict\n","json_path = 'dataset_coco.json'\n","with open(json_path, 'r') as j:\n","    data = json.load(j)\n","print(data['images'][0])\n","\n","# Understand how each image is captioned\n","# 'filename' is the image name\n","# 'filepath' is the folder name\n","# 'imgid' is the id of the image\n","# 'sentences' is a list of the human captioning\n","# 'tokens' is a list of words"],"execution_count":6,"outputs":[{"output_type":"stream","text":["{'filepath': 'val2014', 'sentids': [770337, 771687, 772707, 776154, 781998], 'filename': 'COCO_val2014_000000391895.jpg', 'imgid': 0, 'split': 'test', 'sentences': [{'tokens': ['a', 'man', 'with', 'a', 'red', 'helmet', 'on', 'a', 'small', 'moped', 'on', 'a', 'dirt', 'road'], 'raw': 'A man with a red helmet on a small moped on a dirt road. ', 'imgid': 0, 'sentid': 770337}, {'tokens': ['man', 'riding', 'a', 'motor', 'bike', 'on', 'a', 'dirt', 'road', 'on', 'the', 'countryside'], 'raw': 'Man riding a motor bike on a dirt road on the countryside.', 'imgid': 0, 'sentid': 771687}, {'tokens': ['a', 'man', 'riding', 'on', 'the', 'back', 'of', 'a', 'motorcycle'], 'raw': 'A man riding on the back of a motorcycle.', 'imgid': 0, 'sentid': 772707}, {'tokens': ['a', 'dirt', 'path', 'with', 'a', 'young', 'person', 'on', 'a', 'motor', 'bike', 'rests', 'to', 'the', 'foreground', 'of', 'a', 'verdant', 'area', 'with', 'a', 'bridge', 'and', 'a', 'background', 'of', 'cloud', 'wreathed', 'mountains'], 'raw': 'A dirt path with a young person on a motor bike rests to the foreground of a verdant area with a bridge and a background of cloud-wreathed mountains. ', 'imgid': 0, 'sentid': 776154}, {'tokens': ['a', 'man', 'in', 'a', 'red', 'shirt', 'and', 'a', 'red', 'hat', 'is', 'on', 'a', 'motorcycle', 'on', 'a', 'hill', 'side'], 'raw': 'A man in a red shirt and a red hat is on a motorcycle on a hill side.', 'imgid': 0, 'sentid': 781998}], 'cocoid': 391895}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"w7shV7op5JO8","executionInfo":{"status":"ok","timestamp":1602785577589,"user_tz":240,"elapsed":325,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}},"outputId":"52446d97-694d-40a9-a0c7-b55f52026fb8","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["data[\"images\"][0]"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'cocoid': 391895,\n"," 'filename': 'COCO_val2014_000000391895.jpg',\n"," 'filepath': 'val2014',\n"," 'imgid': 0,\n"," 'sentences': [{'imgid': 0,\n","   'raw': 'A man with a red helmet on a small moped on a dirt road. ',\n","   'sentid': 770337,\n","   'tokens': ['a',\n","    'man',\n","    'with',\n","    'a',\n","    'red',\n","    'helmet',\n","    'on',\n","    'a',\n","    'small',\n","    'moped',\n","    'on',\n","    'a',\n","    'dirt',\n","    'road']},\n","  {'imgid': 0,\n","   'raw': 'Man riding a motor bike on a dirt road on the countryside.',\n","   'sentid': 771687,\n","   'tokens': ['man',\n","    'riding',\n","    'a',\n","    'motor',\n","    'bike',\n","    'on',\n","    'a',\n","    'dirt',\n","    'road',\n","    'on',\n","    'the',\n","    'countryside']},\n","  {'imgid': 0,\n","   'raw': 'A man riding on the back of a motorcycle.',\n","   'sentid': 772707,\n","   'tokens': ['a',\n","    'man',\n","    'riding',\n","    'on',\n","    'the',\n","    'back',\n","    'of',\n","    'a',\n","    'motorcycle']},\n","  {'imgid': 0,\n","   'raw': 'A dirt path with a young person on a motor bike rests to the foreground of a verdant area with a bridge and a background of cloud-wreathed mountains. ',\n","   'sentid': 776154,\n","   'tokens': ['a',\n","    'dirt',\n","    'path',\n","    'with',\n","    'a',\n","    'young',\n","    'person',\n","    'on',\n","    'a',\n","    'motor',\n","    'bike',\n","    'rests',\n","    'to',\n","    'the',\n","    'foreground',\n","    'of',\n","    'a',\n","    'verdant',\n","    'area',\n","    'with',\n","    'a',\n","    'bridge',\n","    'and',\n","    'a',\n","    'background',\n","    'of',\n","    'cloud',\n","    'wreathed',\n","    'mountains']},\n","  {'imgid': 0,\n","   'raw': 'A man in a red shirt and a red hat is on a motorcycle on a hill side.',\n","   'sentid': 781998,\n","   'tokens': ['a',\n","    'man',\n","    'in',\n","    'a',\n","    'red',\n","    'shirt',\n","    'and',\n","    'a',\n","    'red',\n","    'hat',\n","    'is',\n","    'on',\n","    'a',\n","    'motorcycle',\n","    'on',\n","    'a',\n","    'hill',\n","    'side']}],\n"," 'sentids': [770337, 771687, 772707, 776154, 781998],\n"," 'split': 'test'}"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"WKGEnilkqXPf","executionInfo":{"status":"ok","timestamp":1602785395152,"user_tz":240,"elapsed":1764,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}}},"source":["# Each image may have multiple captions\n","# to reduce the bias we are introducing, \n","# let's use the same number of captions per image\n","captions_per_image = 5\n","\n","# Maximum number of words in a sentence\n","# If the sentence has more than max_len words, we skip it\n","# If the sentence has less than max_len words, we pad it with <pad>\n","max_len = 50\n","\n","# From json object to a list of (image_path, captions) pairs \n","# note: captions should be a list of word lists\n","train_img_cap_pairs = []\n","val_img_cap_pairs = []\n","test_img_cap_pairs = []\n","\n","# It contains all distinct words\n","word_set = set()\n","\n","for img_obj in data['images']:\n","    captions = []\n","    for caption in img_obj['sentences']:\n","        word_set.update(caption['tokens'])\n","        if len(caption['tokens']) <= max_len:\n","            captions.append(caption['tokens'])\n","\n","    # If captions is empty, what should we do here?\n","    if len(captions) == 0:\n","        continue\n","\n","    img_path = os.path.join(img_obj['filepath'], img_obj['filename'])\n","\n","    # What if this image cannot be found?\n","    if not os.path.exists(img_path): continue\n","\n","    # Append the pair to the list\n","    if img_obj['split'] == 'train':\n","      train_img_cap_pairs.append([img_path, captions])\n","    elif img_obj['split'] == 'val':\n","      val_img_cap_pairs.append([img_path, captions])"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Qay9wsqmvYFq"},"source":["## Data tranformation *"]},{"cell_type":"code","metadata":{"id":"VpnovM8wvYfY"},"source":["# HDF5: HDF5 is a unique technology suite that makes possible the management\n","# of extremely large and complex data collections.\n","\n","# 1. We will create 2 hdf5 files: \n","#      train_images.hdf5, val_images.hdf5\n","# 2. We will create 5 json files: \n","#      word_map.json -- contains a (word -> number) hash object\n","#      train_captions.json -- contains a list of encoded training captions\n","#      val_captions.json -- contains a list of encoded validation captions\n","#      train_caption_length.json -- contains a list of training caption lengths\n","#      val_caption_length.json -- contains a list of validation caption lengths"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lU4bEZ-Ww8Bu"},"source":["# Word Encoding\n","# word_map: word    -> number (starting from 1)\n","#           <pad>   -> 0\n","#           <start> -> the second highest number\n","#           <end>   -> the highest number\n","word_map = {k: idx + 1 for idx, k in enumerate(word_set)}\n","word_map['<start>'] = len(word_map) + 1\n","word_map['<end>'] = len(word_map) + 1\n","word_map['<pad>'] = 0\n","\n","# Save word map to a JSON\n","with open(os.path.join('word_map.json'), 'w') as j:\n","  json.dump(word_map, j)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MgtQwvvTvyWO","executionInfo":{"status":"ok","timestamp":1602184824793,"user_tz":240,"elapsed":15018,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}},"outputId":"10004c65-84df-4c2e-8fe9-7bc10d26368f","colab":{"base_uri":"https://localhost:8080/","height":89}},"source":["for img_cap_pairs, split in [[train_img_cap_pairs,'train'], [train_img_cap_pairs, 'val']]:\n","    # Save encoded captions and their lengths to JSON files\n","    h5py_path = os.path.join(split + '_images.hdf5')\n","    \n","    # remove it if the path exists\n","    if os.path.exists(h5py_path): os.remove(h5py_path)\n","\n","    with h5py.File(h5py_path, 'a') as h:\n","        # Make a note of the number of captions we are sampling per image\n","        h.attrs['captions_per_image'] = captions_per_image\n","\n","        # Create dataset inside HDF5 file to store images\n","        # we do channel first for the image\n","        images = h.create_dataset('images', (len(img_cap_pairs), 3, 256, 256), dtype='uint8')\n","\n","        enc_captions = []\n","        caplens = []\n","        for index, img_cap_pair in enumerate(img_cap_pairs):\n","            img_path, captions = img_cap_pair\n","\n","            if len(captions) < captions_per_image:\n","                # add some captions by randomly sampling from captions\n","                captions = captions + [choice(captions) for _ in range(captions_per_image - len(captions))]\n","            else:\n","                # randomly sample k from captions\n","                captions = sample(captions, captions_per_image)\n","\n","            # Sanity check\n","            assert len(captions) == captions_per_image\n","\n","            # Read image and transform it into (3, 256, 256)\n","            # Hint: use cv2, you will need to read, resize and transpose\n","            img = cv2.imread(img_path)\n","            img = cv2.resize(img, (256, 256))\n","            img = img.transpose(2, 0, 1)\n","\n","            assert img.shape == (3, 256, 256)\n","\n","            # Save image to HDF5 file\n","            images[index] = img\n","            for idx, caption in enumerate(captions):\n","                # Encode captions\n","                #   a list of numbers\n","                #   Format should be <start> word1 word2 ... wordN <end> <pad> <pad>...\n","                #   The total length should be equal to max_len\n","                enc_c = [word_map['<start>']] + [word_map[word] for word in caption] + \\\n","                 [word_map['<end>']] + [word_map['<pad>']] * (max_len - len(caption))\n","\n","                enc_captions.append(enc_c)\n","                caplens.append(len(caption) + 2)                \n","\n","    with open(os.path.join(split + '_captions.json'), 'w') as j:\n","        json.dump(enc_captions, j)\n","\n","    with open(os.path.join(split + '_caption_length.json'), 'w') as j:\n","        json.dump(caplens, j)\n","\n","# Sanity check\n","print('caption length:', caplens[0])\n","print('caption:', caption)\n","print('caption encoding:', enc_c)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["caption length: 10\n","caption: ['a', 'sandwich', 'is', 'loaded', 'and', 'served', 'with', 'fries']\n","caption encoding: [27930, 6376, 4324, 13954, 15178, 25809, 13074, 5354, 26667, 27931, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"NPu-GjhgqnkY"},"source":["#Helper functions *"]},{"cell_type":"code","metadata":{"id":"Br2WmVaQl8zd"},"source":["def save_checkpoint(data_name, epoch, epochs_since_improvement, encoder, decoder, encoder_optimizer, decoder_optimizer,\n","                    bleu4, is_best):\n","    state = {'epoch': epoch,\n","             'epochs_since_improvement': epochs_since_improvement,\n","             'bleu-4': bleu4,\n","             'encoder': encoder,\n","             'decoder': decoder,\n","             'encoder_optimizer': encoder_optimizer,\n","             'decoder_optimizer': decoder_optimizer}\n","    filename = 'checkpoint_' + data_name + '.pth.tar'\n","    torch.save(state, filename)\n","    # If this checkpoint is the best so far, store a copy so it doesn't get overwritten by a worse checkpoint\n","    if is_best:\n","        torch.save(state, 'BEST_' + filename)\n","\n","\n","class AverageMeter(object):\n","    def __init__(self):\n","        self.reset()\n","\n","    def reset(self):\n","        self.val = 0\n","        self.avg = 0\n","        self.sum = 0\n","        self.count = 0\n","\n","    def update(self, val, n=1):\n","        self.val = val\n","        self.sum += val * n\n","        self.count += n\n","        self.avg = self.sum / self.count\n","\n","def accuracy(scores, targets, k):\n","    batch_size = targets.size(0)\n","    _, ind = scores.topk(k, 1, True, True)\n","    correct = ind.eq(targets.view(-1, 1).expand_as(ind))\n","    correct_total = correct.view(-1).float().sum()  # 0D tensor\n","    return correct_total.item() * (100.0 / batch_size)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3fnKTTtm5Ru2"},"source":["# Model Architecture"]},{"cell_type":"markdown","metadata":{"id":"LLwXhQwCHIb3"},"source":["## Encoder"]},{"cell_type":"code","metadata":{"id":"ZXd4HvZ0qmw2"},"source":["import torch\n","from torch import nn\n","import torchvision\n","\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n","\n","\n","class Encoder(nn.Module):\n","    def __init__(self, encoded_image_size=14):\n","        super(Encoder, self).__init__()\n","        self.enc_image_size = encoded_image_size\n","\n","        # pretrained ImageNet ResNet-101\n","        resnet = torchvision.models.resnet101(pretrained=True)   \n","\n","        # Remove linear and pool layers. \n","        # 1. Pooling layer:\n","        #    Since the default average pooling will output a 100*100 image,\n","        #    and if we want to customize the output image embedding,\n","        #    then we should delete the default average pooling layer,\n","        #    and use AdaptiveAvgPool2d to customize it\n","        #    https://arxiv.org/pdf/1512.03385.pdf\n","        # 2. Fully connected layer: \n","        #    help to analyze information, but not extract information\n","        modules = list(resnet.children())[:-2]\n","        self.resnet = nn.Sequential(*modules)\n","\n","        # Resize image to fixed size to allow input images of variable size\n","        self.adaptive_pool = nn.AdaptiveAvgPool2d((encoded_image_size, encoded_image_size))\n","\n","        # We want to avoid training encoder\n","        # Only avoid resnet since adaptive_pool should still be trained\n","        # 1. When could we use pre-trained CNN?\n","        #    When the dataset used in pre-trained CNN is similar with the dataset we use\n","\n","        for param in self.resnet.parameters():\n","          param.requires_grad = False\n","        \n","\n","    def forward(self, images):\n","        # Use resnet, apply adaptive_pool\n","        out = self.resnet(images)  # (batch_size, 2048, image_size/32, image_size/32)\n","        out = self.adaptive_pool(out)  # (batch_size, 2048, encoded_image_size, encoded_image_size)\n","        out = out.permute(0, 2, 3, 1)  # (batch_size, encoded_image_size, encoded_image_size, 2048)\n","        return out"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"loGag7jyHM-1"},"source":["##Attention *"]},{"cell_type":"code","metadata":{"id":"nd2Gpxu0HP2h"},"source":["class Attention(nn.Module):\n","    \"\"\"\n","    Attention Network.\n","    \"\"\"\n","\n","    def __init__(self, encoder_dim, decoder_dim, attention_dim):\n","        \"\"\"\n","        :param encoder_dim: feature size of encoded images\n","        :param decoder_dim: size of decoder's RNN\n","        :param attention_dim: size of the attention network\n","        \"\"\"\n","        super(Attention, self).__init__()\n","        self.encoder_att = nn.Linear(encoder_dim, attention_dim)  # linear layer to transform encoded image\n","        self.decoder_att = nn.Linear(decoder_dim, attention_dim)  # linear layer to transform decoder's output\n","        self.full_att = nn.Linear(attention_dim, 1)  # linear layer to calculate values to be softmax-ed\n","        self.relu = nn.ReLU()\n","        self.softmax = nn.Softmax(dim=1)  # softmax layer to calculate weights\n","\n","    def forward(self, encoder_out, decoder_hidden):\n","        \"\"\"\n","        Forward propagation.\n","        :param encoder_out: encoded images, a tensor of dimension (batch_size, num_pixels, encoder_dim)\n","        :param decoder_hidden: previous decoder output, a tensor of dimension (batch_size, decoder_dim)\n","        :return: attention weighted encoding, weights\n","        \"\"\"\n","        att1 = self.encoder_att(encoder_out)  # (batch_size, num_pixels, attention_dim)\n","        att2 = self.decoder_att(decoder_hidden)  # (batch_size, attention_dim)\n","        att = self.full_att(self.relu(att1 + att2.unsqueeze(1))).squeeze(2)  # (batch_size, num_pixels)\n","        alpha = self.softmax(att)  # (batch_size, num_pixels)\n","        attention_weighted_encoding = (encoder_out * alpha.unsqueeze(2)).sum(dim=1)  # (batch_size, encoder_dim)\n","\n","        return attention_weighted_encoding, alpha\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mjef7jONHOX6"},"source":["##Decoder *"]},{"cell_type":"code","metadata":{"id":"_N6-RqyLHUvt"},"source":["\n","class DecoderWithAttention(nn.Module):\n","    \"\"\"\n","    Decoder.\n","    \"\"\"\n","\n","    def __init__(self, attention_dim, embed_dim, decoder_dim, vocab_size, encoder_dim=2048, dropout=0.5):\n","        \"\"\"\n","        :param attention_dim: size of attention network\n","        :param embed_dim: embedding size\n","        :param decoder_dim: size of decoder's RNN\n","        :param vocab_size: size of vocabulary\n","        :param encoder_dim: feature size of encoded images\n","        :param dropout: dropout\n","        \"\"\"\n","        super(DecoderWithAttention, self).__init__()\n","\n","        self.encoder_dim = encoder_dim\n","        self.attention_dim = attention_dim\n","        self.embed_dim = embed_dim\n","        self.decoder_dim = decoder_dim\n","        self.vocab_size = vocab_size\n","        self.dropout = dropout\n","\n","        self.attention = Attention(encoder_dim, decoder_dim, attention_dim)  # attention network\n","\n","        self.embedding = nn.Embedding(vocab_size, embed_dim)  # embedding layer\n","        self.dropout = nn.Dropout(p=self.dropout)\n","        self.decode_step = nn.LSTMCell(embed_dim + encoder_dim, decoder_dim, bias=True)  # decoding LSTMCell\n","        self.init_h = nn.Linear(encoder_dim, decoder_dim)  # linear layer to find initial hidden state of LSTMCell\n","        self.init_c = nn.Linear(encoder_dim, decoder_dim)  # linear layer to find initial cell state of LSTMCell\n","        self.f_beta = nn.Linear(decoder_dim, encoder_dim)  # linear layer to create a sigmoid-activated gate\n","        self.sigmoid = nn.Sigmoid()\n","        self.fc = nn.Linear(decoder_dim, vocab_size)  # linear layer to find scores over vocabulary\n","        self.init_weights()  # initialize some layers with the uniform distribution\n","\n","    def init_weights(self):\n","        \"\"\"\n","        Initializes some parameters with values from the uniform distribution, for easier convergence.\n","        \"\"\"\n","        self.embedding.weight.data.uniform_(-0.1, 0.1)\n","        self.fc.bias.data.fill_(0)\n","        self.fc.weight.data.uniform_(-0.1, 0.1)\n","\n","    def init_hidden_state(self, encoder_out):\n","        \"\"\"\n","        Creates the initial hidden and cell states for the decoder's LSTM based on the encoded images.\n","        :param encoder_out: encoded images, a tensor of dimension (batch_size, num_pixels, encoder_dim)\n","        :return: hidden state, cell state\n","        \"\"\"\n","        mean_encoder_out = encoder_out.mean(dim=1)\n","        h = self.init_h(mean_encoder_out)  # (batch_size, decoder_dim)\n","        c = self.init_c(mean_encoder_out)\n","        return h, c\n","\n","    def forward(self, encoder_out, encoded_captions, caption_lengths):\n","        \"\"\"\n","        Forward propagation.\n","        :param encoder_out: encoded images, a tensor of dimension (batch_size, enc_image_size, enc_image_size, encoder_dim)\n","        :param encoded_captions: encoded captions, a tensor of dimension (batch_size, max_caption_length)\n","        :param caption_lengths: caption lengths, a tensor of dimension (batch_size, 1)\n","        :return: scores for vocabulary, sorted encoded captions, decode lengths, weights, sort indices\n","        \"\"\"\n","\n","        batch_size = encoder_out.size(0)\n","        encoder_dim = encoder_out.size(-1)\n","        vocab_size = self.vocab_size\n","\n","        # Flatten image\n","        encoder_out = encoder_out.view(batch_size, -1, encoder_dim)  # (batch_size, num_pixels, encoder_dim)\n","        num_pixels = encoder_out.size(1)\n","\n","        # Sort input data by decreasing lengths; why? apparent below\n","        caption_lengths, sort_ind = caption_lengths.squeeze(1).sort(dim=0, descending=True)\n","        encoder_out = encoder_out[sort_ind]\n","        encoded_captions = encoded_captions[sort_ind]\n","\n","        # Embedding\n","        embeddings = self.embedding(encoded_captions)  # (batch_size, max_caption_length, embed_dim)\n","\n","        # Initialize LSTM state\n","        h, c = self.init_hidden_state(encoder_out)  # (batch_size, decoder_dim)\n","\n","        # We won't decode at the <end> position, since we've finished generating as soon as we generate <end>\n","        # So, decoding lengths are actual lengths - 1\n","        decode_lengths = (caption_lengths - 1).tolist()\n","\n","        # Create tensors to hold word predicion scores and alphas\n","        predictions = torch.zeros(batch_size, max(decode_lengths), vocab_size).to(device)\n","        alphas = torch.zeros(batch_size, max(decode_lengths), num_pixels).to(device)\n","\n","        # At each time-step, decode by\n","        # attention-weighing the encoder's output based on the decoder's previous hidden state output\n","        # then generate a new word in the decoder with the previous word and the attention weighted encoding\n","        for t in range(max(decode_lengths)):\n","            batch_size_t = sum([l > t for l in decode_lengths])\n","            attention_weighted_encoding, alpha = self.attention(encoder_out[:batch_size_t],\n","                                                                h[:batch_size_t])\n","            gate = self.sigmoid(self.f_beta(h[:batch_size_t]))  # gating scalar, (batch_size_t, encoder_dim)\n","            attention_weighted_encoding = gate * attention_weighted_encoding\n","            h, c = self.decode_step(\n","                torch.cat([embeddings[:batch_size_t, t, :], attention_weighted_encoding], dim=1),\n","                (h[:batch_size_t], c[:batch_size_t]))  # (batch_size_t, decoder_dim)\n","            preds = self.fc(self.dropout(h))  # (batch_size_t, vocab_size)\n","            predictions[:batch_size_t, t, :] = preds\n","            alphas[:batch_size_t, t, :] = alpha\n","\n","        return predictions, encoded_captions, decode_lengths, alphas, sort_ind"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Gddi9-OWLkqT"},"source":["# Pytoch dataset transformation"]},{"cell_type":"code","metadata":{"id":"egEdtSr267C7"},"source":["import torch\n","from torch.utils.data import Dataset\n","import h5py\n","import json\n","import os\n","\n","\n","class CaptionDataset(Dataset):\n","    def __init__(self, split):\n","        \"\"\"\n","        :param split: split, one of 'TRAIN', 'VAL', or 'TEST'\n","        \"\"\"\n","        self.split = split\n","\n","        # Open hdf5 file where images are stored\n","        self.h = h5py.File(split + '_images.hdf5', 'r')\n","        self.imgs = self.h['images']\n","\n","        # Captions per image\n","        self.cpi = self.h.attrs['captions_per_image']\n","\n","        # Load encoded captions \n","        self.captions = json.load(open(split + '_captions.json', 'r'))\n","\n","        # Load caption lengths\n","        self.caplens = json.load(open(split + '_caption_length.json','r'))\n","        \n","        # Total number of datapoints\n","        self.dataset_size = len(self.caplens)\n","\n","    def __getitem__(self, i):\n","        # Remember, the Nth caption corresponds to the (N // captions_per_image)th image\n","        # normalize pixels to [0,1]\n","        img = torch.FloatTensor(self.imgs[i // self.cpi] / 255.)\n","        normalize = transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n","        img = transforms.Compose([normalize])(img)\n","\n","        caption = torch.LongTensor(self.captions[i])\n","        caplen = torch.LongTensor([self.caplens[i]])\n","\n","        if self.split is 'train':\n","            return img, caption, caplen\n","        else:\n","            # For validation of testing, also return all 'captions_per_image' captions to find BLEU-4 score\n","            all_captions = torch.LongTensor(\n","                self.captions[((i // self.cpi) * self.cpi):(((i // self.cpi) * self.cpi) + self.cpi)])\n","            return img, caption, caplen, all_captions\n","\n","    def __len__(self):\n","        return self.dataset_size"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fh54sUaU5aUk"},"source":["# Model training"]},{"cell_type":"markdown","metadata":{"id":"SCdA_a6PJBE2"},"source":["##Initialize parameters"]},{"cell_type":"code","metadata":{"id":"6ZTWV83qq6dy"},"source":["import time\n","import torch.backends.cudnn as cudnn\n","import torch.optim\n","import torch.utils.data\n","import torchvision.transforms as transforms\n","from torch import nn\n","from torch.nn.utils.rnn import pack_padded_sequence\n","from nltk.translate.bleu_score import corpus_bleu\n","\n","# Model hyper-parameters\n","emb_dim = 512  # dimension of word embeddings\n","attention_dim = 512  # dimension of attention linear layers\n","decoder_dim = 512  # dimension of decoder RNN\n","dropout = 0.5\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")  \n","cudnn.benchmark = True  \n","\n","epochs = 30  \n","batch_size = 32\n","decoder_lr = 4e-4  \n","alpha_c = 1.  # regularization parameter for 'doubly stochastic attention'\n","\n","best_bleu4 = 0.  # BLEU-4 score right now"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YcsBgmB6H6C6"},"source":["## Training per epoch"]},{"cell_type":"code","metadata":{"id":"YRS2xtHsH5nu"},"source":["def train(train_loader, encoder, decoder, loss_function, decoder_optimizer, epoch):\n","    \"\"\"\n","    Performs one epoch's training.\n","    :param train_loader: DataLoader for training data\n","    :param encoder: encoder model\n","    :param decoder: decoder model\n","    :param loss_function: loss layer\n","    :param decoder_optimizer: optimizer to update decoder's weights\n","    :param epoch: epoch number\n","    \"\"\"\n","\n","    decoder.train()  # train mode (dropout and batchnorm is used)\n","    encoder.train()\n","\n","    losses = AverageMeter()  # loss (per word decoded)\n","    top5accs = AverageMeter()  # top5 accuracy\n","\n","    # Load by batches\n","    for i, (imgs, caps, caplens) in enumerate(train_loader):\n","        # Remember to use GPU\n","        # Put all training datasets to GPU\n","        # Since there will be a series of simple computations during image processing \n","        # MLP (in one layer): parallel computing\n","        imgs = imgs.to(device)\n","        caps = caps.to(device)\n","        caplens = caplens.to(device)\n","\n","        # Encoding\n","        encoded_imgs = encoder.forward(imgs)\n","        # Decoding\n","        preds, caps_sorted, decode_lengths, alphas, sort_ind = decoder.forward(encoded_imgs, caps, caplens)\n","\n","        # Since we decoded starting with <start>, the targets are all words after <start>, up to <end>\n","        targets = caps_sorted[:, 1:]\n","\n","        # Remove timesteps that we didn't decode at, or are pads\n","        preds, _, _, _ = pack_padded_sequence(preds, decode_lengths, batch_first=True)\n","        targets, _, _, _ = pack_padded_sequence(targets, decode_lengths, batch_first=True)\n","\n","        # Calculate loss\n","        loss = loss_function(preds, targets)\n","\n","        # Add doubly stochastic attention regularization\n","        loss += alpha_c * ((1. - alphas.sum(dim=1)) ** 2).mean()\n","\n","        # Back prop on decoder only\n","        loss.backward()\n","        decoder_optimizer.step()\n","        decoder_optimizer.zero_grad()\n","\n","        # Keep track of metrics\n","        losses.update(loss.item(), sum(decode_lengths))\n","        top5accs.update(accuracy(preds, targets, 5), sum(decode_lengths))\n","\n","        # Print status\n","        if i % 100 == 0:\n","            print('Epoch: [{0}][{1}/{2}]\\t'\n","                  'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'\n","                  'Top-5 Accuracy {top5.val:.3f} ({top5.avg:.3f})'.format(epoch, i, len(train_loader),\n","                                                                          loss=losses,\n","                                                                          top5=top5accs))\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eWgvfAFLH_ov"},"source":["## Validation per epoch *"]},{"cell_type":"code","metadata":{"id":"AUWGxZZ3H_z_"},"source":["def validate(val_loader, encoder, decoder, loss_function):\n","    \"\"\"\n","    Performs one epoch's validation.\n","    :param val_loader: DataLoader for validation data.\n","    :param encoder: encoder model\n","    :param decoder: decoder model\n","    :param loss_function: loss layer\n","    :return: BLEU-4 score\n","    \"\"\"\n","    # eval mode (no dropout or batchnorm)\n","    decoder.eval()  \n","    encoder.eval()\n","\n","    losses = AverageMeter()\n","    top5accs = AverageMeter()\n","\n","    references = list()  # references (true captions) for calculating BLEU-4 score\n","    hypotheses = list()  # hypotheses (predictions)\n","\n","    with torch.no_grad():\n","        # Batches\n","        for i, (imgs, caps, caplens, allcaps) in enumerate(val_loader):\n","            imgs = imgs.to(device)\n","            caps = caps.to(device)\n","            caplens = caplens.to(device)\n","\n","            # Forward prop.\n","            encoded_imgs = encoder(imgs)\n","            scores, caps_sorted, decode_lengths, alphas, sort_ind = decoder(encoded_imgs, caps, caplens)\n","            targets = caps_sorted[:, 1:]\n","\n","            # Remove timesteps that we didn't decode at, or are pads\n","            # pack_padded_sequence is an easy trick to do this\n","            scores_copy = scores.clone()\n","\n","            scores, _, _, _ = pack_padded_sequence(scores, decode_lengths, batch_first=True)\n","            targets, _, _, _ = pack_padded_sequence(targets, decode_lengths, batch_first=True)\n","\n","            # Calculate loss\n","            loss = loss_function(scores, targets)\n","\n","            # Add doubly stochastic attention regularization\n","            loss += alpha_c * ((1. - alphas.sum(dim=1)) ** 2).mean()\n","\n","            # Keep track of metrics\n","            losses.update(loss.item(), sum(decode_lengths))\n","            top5 = accuracy(scores, targets, 5)\n","            top5accs.update(top5, sum(decode_lengths))\n","\n","            if i % 100 == 0:\n","                print('Validation: [{0}/{1}]\\t'\n","                      'Loss {loss.val:.4f} ({loss.avg:.4f})\\t'\n","                      'Top-5 Accuracy {top5.val:.3f} ({top5.avg:.3f})\\t'.format(i, len(val_loader),\n","                                                                                loss=losses, top5=top5accs))\n","\n","            # Store references (true captions), and hypothesis (prediction) for each image\n","            # If for n images, we have n hypotheses, and references a, b, c... for each image, we need -\n","            # references = [[ref1a, ref1b, ref1c], [ref2a, ref2b], ...], hypotheses = [hyp1, hyp2, ...]\n","\n","            # References\n","            allcaps = allcaps[sort_ind]  # because images were sorted in the decoder\n","            for j in range(allcaps.shape[0]):\n","                img_caps = allcaps[j].tolist()\n","                img_captions = list(\n","                    map(lambda c: [w for w in c if w not in {word_map['<start>'], word_map['<pad>']}],\n","                        img_caps))  # remove <start> and pads\n","                references.append(img_captions)\n","\n","            # Hypotheses\n","            _, preds = torch.max(scores_copy, dim=2)\n","            preds = preds.tolist()\n","            temp_preds = list()\n","            for j, p in enumerate(preds):\n","                temp_preds.append(preds[j][:decode_lengths[j]])  # remove pads\n","            preds = temp_preds\n","            hypotheses.extend(preds)\n","\n","            assert len(references) == len(hypotheses)\n","\n","        # Calculate BLEU-4 scores\n","        bleu4 = corpus_bleu(references, hypotheses)\n","\n","        print(\n","            '\\n * LOSS - {loss.avg:.3f}, TOP-5 ACCURACY - {top5.avg:.3f}, BLEU-4 - {bleu}\\n'.format(\n","                loss=losses,\n","                top5=top5accs,\n","                bleu=bleu4))\n","\n","    return bleu4\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sMz3PcBUIGQ6"},"source":["## Start training"]},{"cell_type":"code","metadata":{"id":"ehs0beBuq_mM","executionInfo":{"status":"ok","timestamp":1602186729517,"user_tz":240,"elapsed":1892628,"user":{"displayName":"Yaxuan Guo","photoUrl":"","userId":"15161658940067445754"}},"outputId":"24d74e7f-a0b3-4a6d-96b7-9b67a3472813","colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["b0d6949d484041d2b8ebada7c5701053","9201f66d66a4409abc617197985a4ec7","6cb34c558191415da8769a453988e1e8","d44c76838c47460daeaeb4dde81e81b8","c0e17f7843b8405aae7544ebb002225b","7e30b947ecfb48b7b5818df7ed81396a","38a5e11387b6488384677175617aedfb","4dc0a75f46fa4e2d89dfa1e6aaa9390f"]}},"source":["# Read word map\n","word_map_file = 'word_map.json'\n","with open(word_map_file, 'r') as j:\n","    word_map = json.load(j)\n","\n","# Initialize encoder, and we don't train it\n","encoder = Encoder()\n","encoder_optimizer = None\n","\n","# Initialize decoder, and adam optimizer\n","# Why is len(word_map) here?\n","decoder = DecoderWithAttention(attention_dim, emb_dim, decoder_dim, len(word_map), dropout=dropout)\n","decoder_optimizer = torch.optim.Adam(\n","    params=filter(lambda p: p.requires_grad, decoder.parameters()),\n","    lr=decoder_lr\n",")\n","\n","\n","# Move to GPU, if available\n","decoder = decoder.to(device)\n","encoder = encoder.to(device)\n","\n","# Loss function\n","# Why use CrossEntropyLoss():\n","#   Model predict + softmax: normalize and obtain the probability of each word\n","#   CrossEntropyLoss: loss function to help gradient tends to optimal values \n","loss_function = nn.CrossEntropyLoss().to(device)\n","\n","# Custom dataloaders\n","train_loader = torch.utils.data.DataLoader(\n","    dataset = CaptionDataset('train'), \n","    batch_size = batch_size, \n","    shuffle = True, \n","    pin_memory = True,\n","    num_workers = 1\n","    )\n","val_loader = torch.utils.data.DataLoader(\n","    dataset = CaptionDataset('val'), \n","    batch_size = batch_size, \n","    shuffle = False, \n","    pin_memory = True,\n","    num_workers = 1\n","    )\n","\n","# Epochs\n","for epoch in range(epochs):\n","    # One epoch's training\n","    train(train_loader=train_loader,\n","          encoder=encoder,\n","          decoder=decoder,\n","          loss_function=loss_function,\n","          decoder_optimizer = decoder_optimizer,\n","          epoch = epoch)\n","\n","    # One epoch's validation\n","    recent_bleu4 = validate(val_loader=val_loader,\n","                            encoder=encoder,\n","                            decoder=decoder,\n","                            loss_function = loss_function)\n","\n","    # Save checkpoint\n","    # Automate save the training results and restart the traning from that epoch\n","    # Split training and testing, testing could directly start using parameters of one parameter\n","    is_best = recent_bleu4 > best_bleu4\n","    best_bleu4 = max(recent_bleu4, best_bleu4)\n","\n","    save_checkpoint('coco', epoch, 0, encoder, decoder, encoder_optimizer,\n","                    decoder_optimizer, recent_bleu4, is_best)\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading: \"https://download.pytorch.org/models/resnet101-5d3b4d8f.pth\" to /root/.cache/torch/hub/checkpoints/resnet101-5d3b4d8f.pth\n"],"name":"stderr"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b0d6949d484041d2b8ebada7c5701053","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, max=178728960.0), HTML(value='')))"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","Epoch: [0][0/126]\tLoss 11.1872 (11.1872)\tTop-5 Accuracy 0.000 (0.000)\n","Epoch: [0][100/126]\tLoss 6.2294 (6.9914)\tTop-5 Accuracy 37.598 (33.886)\n","Validation: [0/126]\tLoss 6.3415 (6.3415)\tTop-5 Accuracy 38.786 (38.786)\t\n","Validation: [100/126]\tLoss 5.8691 (5.6873)\tTop-5 Accuracy 36.585 (41.554)\t\n","\n"," * LOSS - 5.682, TOP-5 ACCURACY - 41.598, BLEU-4 - 0.01102232766415288\n","\n","Epoch: [1][0/126]\tLoss 5.9238 (5.9238)\tTop-5 Accuracy 38.630 (38.630)\n","Epoch: [1][100/126]\tLoss 5.6147 (5.5995)\tTop-5 Accuracy 44.757 (44.147)\n","Validation: [0/126]\tLoss 5.7665 (5.7665)\tTop-5 Accuracy 46.174 (46.174)\t\n","Validation: [100/126]\tLoss 5.2657 (5.0674)\tTop-5 Accuracy 48.509 (51.094)\t\n","\n"," * LOSS - 5.059, TOP-5 ACCURACY - 51.141, BLEU-4 - 0.08360096984917317\n","\n","Epoch: [2][0/126]\tLoss 4.9738 (4.9738)\tTop-5 Accuracy 54.839 (54.839)\n","Epoch: [2][100/126]\tLoss 5.1145 (5.1009)\tTop-5 Accuracy 49.304 (50.691)\n","Validation: [0/126]\tLoss 5.4035 (5.4035)\tTop-5 Accuracy 48.549 (48.549)\t\n","Validation: [100/126]\tLoss 4.8775 (4.6765)\tTop-5 Accuracy 52.304 (56.453)\t\n","\n"," * LOSS - 4.668, TOP-5 ACCURACY - 56.507, BLEU-4 - 0.10676503956318703\n","\n","Epoch: [3][0/126]\tLoss 4.4915 (4.4915)\tTop-5 Accuracy 59.487 (59.487)\n","Epoch: [3][100/126]\tLoss 4.7435 (4.7559)\tTop-5 Accuracy 53.264 (55.263)\n","Validation: [0/126]\tLoss 5.0383 (5.0383)\tTop-5 Accuracy 52.770 (52.770)\t\n","Validation: [100/126]\tLoss 4.5624 (4.3812)\tTop-5 Accuracy 57.453 (60.309)\t\n","\n"," * LOSS - 4.373, TOP-5 ACCURACY - 60.372, BLEU-4 - 0.13240415592394478\n","\n","Epoch: [4][0/126]\tLoss 4.3726 (4.3726)\tTop-5 Accuracy 60.714 (60.714)\n","Epoch: [4][100/126]\tLoss 4.5881 (4.5221)\tTop-5 Accuracy 58.856 (58.327)\n","Validation: [0/126]\tLoss 4.7788 (4.7788)\tTop-5 Accuracy 55.145 (55.145)\t\n","Validation: [100/126]\tLoss 4.2943 (4.1335)\tTop-5 Accuracy 59.621 (63.377)\t\n","\n"," * LOSS - 4.126, TOP-5 ACCURACY - 63.380, BLEU-4 - 0.15668317395129716\n","\n","Epoch: [5][0/126]\tLoss 4.4958 (4.4958)\tTop-5 Accuracy 55.145 (55.145)\n","Epoch: [5][100/126]\tLoss 4.4601 (4.3196)\tTop-5 Accuracy 57.808 (60.662)\n","Validation: [0/126]\tLoss 4.5625 (4.5625)\tTop-5 Accuracy 56.464 (56.464)\t\n","Validation: [100/126]\tLoss 4.0960 (3.9330)\tTop-5 Accuracy 60.163 (65.543)\t\n","\n"," * LOSS - 3.927, TOP-5 ACCURACY - 65.625, BLEU-4 - 0.17066559111650823\n","\n","Epoch: [6][0/126]\tLoss 4.0031 (4.0031)\tTop-5 Accuracy 64.499 (64.499)\n","Epoch: [6][100/126]\tLoss 4.3651 (4.1400)\tTop-5 Accuracy 58.974 (62.621)\n","Validation: [0/126]\tLoss 4.3431 (4.3431)\tTop-5 Accuracy 59.894 (59.894)\t\n","Validation: [100/126]\tLoss 3.8918 (3.7386)\tTop-5 Accuracy 63.957 (67.988)\t\n","\n"," * LOSS - 3.732, TOP-5 ACCURACY - 68.181, BLEU-4 - 0.1978602496691239\n","\n","Epoch: [7][0/126]\tLoss 4.0371 (4.0371)\tTop-5 Accuracy 66.667 (66.667)\n","Epoch: [7][100/126]\tLoss 3.8572 (3.9728)\tTop-5 Accuracy 67.033 (64.927)\n","Validation: [0/126]\tLoss 4.1442 (4.1442)\tTop-5 Accuracy 62.797 (62.797)\t\n","Validation: [100/126]\tLoss 3.7221 (3.5869)\tTop-5 Accuracy 64.770 (69.946)\t\n","\n"," * LOSS - 3.581, TOP-5 ACCURACY - 70.050, BLEU-4 - 0.2084651219224989\n","\n","Epoch: [8][0/126]\tLoss 3.6224 (3.6224)\tTop-5 Accuracy 70.960 (70.960)\n","Epoch: [8][100/126]\tLoss 3.8433 (3.8151)\tTop-5 Accuracy 65.455 (66.916)\n","Validation: [0/126]\tLoss 3.9818 (3.9818)\tTop-5 Accuracy 62.797 (62.797)\t\n","Validation: [100/126]\tLoss 3.5317 (3.4245)\tTop-5 Accuracy 67.209 (72.139)\t\n","\n"," * LOSS - 3.418, TOP-5 ACCURACY - 72.251, BLEU-4 - 0.23324059142117531\n","\n","Epoch: [9][0/126]\tLoss 3.4303 (3.4303)\tTop-5 Accuracy 74.212 (74.212)\n","Epoch: [9][100/126]\tLoss 3.7275 (3.6645)\tTop-5 Accuracy 67.416 (68.874)\n","Validation: [0/126]\tLoss 3.8402 (3.8402)\tTop-5 Accuracy 65.699 (65.699)\t\n","Validation: [100/126]\tLoss 3.4193 (3.2776)\tTop-5 Accuracy 70.732 (74.398)\t\n","\n"," * LOSS - 3.272, TOP-5 ACCURACY - 74.502, BLEU-4 - 0.2506592977906197\n","\n","Epoch: [10][0/126]\tLoss 3.4175 (3.4175)\tTop-5 Accuracy 75.775 (75.775)\n","Epoch: [10][100/126]\tLoss 3.6446 (3.5355)\tTop-5 Accuracy 69.022 (70.551)\n","Validation: [0/126]\tLoss 3.6524 (3.6524)\tTop-5 Accuracy 66.755 (66.755)\t\n","Validation: [100/126]\tLoss 3.2698 (3.1360)\tTop-5 Accuracy 71.003 (76.122)\t\n","\n"," * LOSS - 3.131, TOP-5 ACCURACY - 76.303, BLEU-4 - 0.27120788427299414\n","\n","Epoch: [11][0/126]\tLoss 3.2749 (3.2749)\tTop-5 Accuracy 73.961 (73.961)\n","Epoch: [11][100/126]\tLoss 3.3782 (3.4182)\tTop-5 Accuracy 74.468 (72.289)\n","Validation: [0/126]\tLoss 3.5097 (3.5097)\tTop-5 Accuracy 68.074 (68.074)\t\n","Validation: [100/126]\tLoss 3.1421 (3.0101)\tTop-5 Accuracy 73.713 (77.988)\t\n","\n"," * LOSS - 3.005, TOP-5 ACCURACY - 78.139, BLEU-4 - 0.2861279296066174\n","\n","Epoch: [12][0/126]\tLoss 3.4593 (3.4593)\tTop-5 Accuracy 70.845 (70.845)\n","Epoch: [12][100/126]\tLoss 3.2358 (3.2965)\tTop-5 Accuracy 76.823 (74.042)\n","Validation: [0/126]\tLoss 3.3667 (3.3667)\tTop-5 Accuracy 73.351 (73.351)\t\n","Validation: [100/126]\tLoss 3.0207 (2.8891)\tTop-5 Accuracy 75.610 (79.759)\t\n","\n"," * LOSS - 2.885, TOP-5 ACCURACY - 79.958, BLEU-4 - 0.3052062761842469\n","\n","Epoch: [13][0/126]\tLoss 3.2529 (3.2529)\tTop-5 Accuracy 74.366 (74.366)\n","Epoch: [13][100/126]\tLoss 3.0269 (3.1850)\tTop-5 Accuracy 79.412 (75.494)\n","Validation: [0/126]\tLoss 3.1852 (3.1852)\tTop-5 Accuracy 76.781 (76.781)\t\n","Validation: [100/126]\tLoss 2.8945 (2.7694)\tTop-5 Accuracy 79.133 (82.096)\t\n","\n"," * LOSS - 2.766, TOP-5 ACCURACY - 82.198, BLEU-4 - 0.32061753887216454\n","\n","Epoch: [14][0/126]\tLoss 2.9503 (2.9503)\tTop-5 Accuracy 80.508 (80.508)\n","Epoch: [14][100/126]\tLoss 2.8912 (3.0796)\tTop-5 Accuracy 79.539 (77.234)\n","Validation: [0/126]\tLoss 3.0996 (3.0996)\tTop-5 Accuracy 77.045 (77.045)\t\n","Validation: [100/126]\tLoss 2.7931 (2.6727)\tTop-5 Accuracy 80.488 (83.387)\t\n","\n"," * LOSS - 2.669, TOP-5 ACCURACY - 83.525, BLEU-4 - 0.3366370088318631\n","\n","Epoch: [15][0/126]\tLoss 2.9542 (2.9542)\tTop-5 Accuracy 78.889 (78.889)\n","Epoch: [15][100/126]\tLoss 3.0286 (2.9924)\tTop-5 Accuracy 76.011 (78.501)\n","Validation: [0/126]\tLoss 2.9690 (2.9690)\tTop-5 Accuracy 82.058 (82.058)\t\n","Validation: [100/126]\tLoss 2.7033 (2.5731)\tTop-5 Accuracy 84.011 (86.076)\t\n","\n"," * LOSS - 2.571, TOP-5 ACCURACY - 86.149, BLEU-4 - 0.3538338345989672\n","\n","Epoch: [16][0/126]\tLoss 2.7689 (2.7689)\tTop-5 Accuracy 83.014 (83.014)\n","Epoch: [16][100/126]\tLoss 2.7695 (2.9049)\tTop-5 Accuracy 80.601 (79.962)\n","Validation: [0/126]\tLoss 2.8292 (2.8292)\tTop-5 Accuracy 85.752 (85.752)\t\n","Validation: [100/126]\tLoss 2.6067 (2.4850)\tTop-5 Accuracy 85.366 (87.566)\t\n","\n"," * LOSS - 2.482, TOP-5 ACCURACY - 87.693, BLEU-4 - 0.3662397275222278\n","\n","Epoch: [17][0/126]\tLoss 2.7774 (2.7774)\tTop-5 Accuracy 82.535 (82.535)\n","Epoch: [17][100/126]\tLoss 2.9363 (2.8019)\tTop-5 Accuracy 81.073 (81.962)\n","Validation: [0/126]\tLoss 2.7260 (2.7260)\tTop-5 Accuracy 87.335 (87.335)\t\n","Validation: [100/126]\tLoss 2.4696 (2.3821)\tTop-5 Accuracy 88.347 (89.369)\t\n","\n"," * LOSS - 2.380, TOP-5 ACCURACY - 89.431, BLEU-4 - 0.38821559372145215\n","\n","Epoch: [18][0/126]\tLoss 2.8989 (2.8989)\tTop-5 Accuracy 79.221 (79.221)\n","Epoch: [18][100/126]\tLoss 2.7442 (2.7228)\tTop-5 Accuracy 82.979 (83.360)\n","Validation: [0/126]\tLoss 2.6470 (2.6470)\tTop-5 Accuracy 88.918 (88.918)\t\n","Validation: [100/126]\tLoss 2.3920 (2.3092)\tTop-5 Accuracy 89.431 (90.834)\t\n","\n"," * LOSS - 2.307, TOP-5 ACCURACY - 90.933, BLEU-4 - 0.4090197626347435\n","\n","Epoch: [19][0/126]\tLoss 2.6643 (2.6643)\tTop-5 Accuracy 85.674 (85.674)\n","Epoch: [19][100/126]\tLoss 2.6021 (2.6499)\tTop-5 Accuracy 86.740 (84.696)\n","Validation: [0/126]\tLoss 2.5419 (2.5419)\tTop-5 Accuracy 90.501 (90.501)\t\n","Validation: [100/126]\tLoss 2.3090 (2.2437)\tTop-5 Accuracy 92.412 (92.012)\t\n","\n"," * LOSS - 2.241, TOP-5 ACCURACY - 92.035, BLEU-4 - 0.4218404138944095\n","\n","Epoch: [20][0/126]\tLoss 2.7683 (2.7683)\tTop-5 Accuracy 82.857 (82.857)\n","Epoch: [20][100/126]\tLoss 2.6645 (2.5714)\tTop-5 Accuracy 82.561 (86.152)\n","Validation: [0/126]\tLoss 2.4724 (2.4724)\tTop-5 Accuracy 92.348 (92.348)\t\n","Validation: [100/126]\tLoss 2.2518 (2.1680)\tTop-5 Accuracy 91.870 (93.046)\t\n","\n"," * LOSS - 2.166, TOP-5 ACCURACY - 93.118, BLEU-4 - 0.4501754076735656\n","\n","Epoch: [21][0/126]\tLoss 2.3590 (2.3590)\tTop-5 Accuracy 89.011 (89.011)\n","Epoch: [21][100/126]\tLoss 2.5180 (2.5030)\tTop-5 Accuracy 86.575 (87.334)\n","Validation: [0/126]\tLoss 2.3425 (2.3425)\tTop-5 Accuracy 92.348 (92.348)\t\n","Validation: [100/126]\tLoss 2.1513 (2.0819)\tTop-5 Accuracy 92.954 (94.100)\t\n","\n"," * LOSS - 2.081, TOP-5 ACCURACY - 94.127, BLEU-4 - 0.47855929323157753\n","\n","Epoch: [22][0/126]\tLoss 2.2580 (2.2580)\tTop-5 Accuracy 91.413 (91.413)\n","Epoch: [22][100/126]\tLoss 2.4476 (2.4383)\tTop-5 Accuracy 88.122 (88.333)\n","Validation: [0/126]\tLoss 2.2532 (2.2532)\tTop-5 Accuracy 93.931 (93.931)\t\n","Validation: [100/126]\tLoss 2.0816 (2.0144)\tTop-5 Accuracy 94.038 (94.750)\t\n","\n"," * LOSS - 2.013, TOP-5 ACCURACY - 94.767, BLEU-4 - 0.4927544945606571\n","\n","Epoch: [23][0/126]\tLoss 2.4037 (2.4037)\tTop-5 Accuracy 90.349 (90.349)\n","Epoch: [23][100/126]\tLoss 2.3416 (2.3656)\tTop-5 Accuracy 89.385 (89.535)\n","Validation: [0/126]\tLoss 2.1928 (2.1928)\tTop-5 Accuracy 93.931 (93.931)\t\n","Validation: [100/126]\tLoss 2.0334 (1.9654)\tTop-5 Accuracy 94.580 (95.291)\t\n","\n"," * LOSS - 1.964, TOP-5 ACCURACY - 95.319, BLEU-4 - 0.5023874510014892\n","\n","Epoch: [24][0/126]\tLoss 2.1714 (2.1714)\tTop-5 Accuracy 93.199 (93.199)\n","Epoch: [24][100/126]\tLoss 2.3207 (2.2941)\tTop-5 Accuracy 88.669 (90.470)\n","Validation: [0/126]\tLoss 2.0919 (2.0919)\tTop-5 Accuracy 94.987 (94.987)\t\n","Validation: [100/126]\tLoss 1.9595 (1.9026)\tTop-5 Accuracy 95.122 (96.147)\t\n","\n"," * LOSS - 1.902, TOP-5 ACCURACY - 96.151, BLEU-4 - 0.5281714578353836\n","\n","Epoch: [25][0/126]\tLoss 2.1744 (2.1744)\tTop-5 Accuracy 91.477 (91.477)\n","Epoch: [25][100/126]\tLoss 2.2043 (2.2493)\tTop-5 Accuracy 93.496 (91.296)\n","Validation: [0/126]\tLoss 2.0510 (2.0510)\tTop-5 Accuracy 94.723 (94.723)\t\n","Validation: [100/126]\tLoss 1.9256 (1.8509)\tTop-5 Accuracy 95.935 (96.331)\t\n","\n"," * LOSS - 1.850, TOP-5 ACCURACY - 96.354, BLEU-4 - 0.5551175331893625\n","\n","Epoch: [26][0/126]\tLoss 2.3160 (2.3160)\tTop-5 Accuracy 90.625 (90.625)\n","Epoch: [26][100/126]\tLoss 2.2113 (2.2046)\tTop-5 Accuracy 93.664 (92.019)\n","Validation: [0/126]\tLoss 1.9860 (1.9860)\tTop-5 Accuracy 95.251 (95.251)\t\n","Validation: [100/126]\tLoss 1.8497 (1.7960)\tTop-5 Accuracy 96.206 (97.059)\t\n","\n"," * LOSS - 1.795, TOP-5 ACCURACY - 97.044, BLEU-4 - 0.5874029255268002\n","\n","Epoch: [27][0/126]\tLoss 2.0697 (2.0697)\tTop-5 Accuracy 92.443 (92.443)\n","Epoch: [27][100/126]\tLoss 2.2275 (2.1498)\tTop-5 Accuracy 90.489 (92.548)\n","Validation: [0/126]\tLoss 1.9228 (1.9228)\tTop-5 Accuracy 96.306 (96.306)\t\n","Validation: [100/126]\tLoss 1.8133 (1.7501)\tTop-5 Accuracy 97.019 (97.490)\t\n","\n"," * LOSS - 1.750, TOP-5 ACCURACY - 97.461, BLEU-4 - 0.6012749059546479\n","\n","Epoch: [28][0/126]\tLoss 2.0572 (2.0572)\tTop-5 Accuracy 94.385 (94.385)\n","Epoch: [28][100/126]\tLoss 2.1860 (2.1068)\tTop-5 Accuracy 92.331 (93.053)\n","Validation: [0/126]\tLoss 1.8452 (1.8452)\tTop-5 Accuracy 97.361 (97.361)\t\n","Validation: [100/126]\tLoss 1.7653 (1.7071)\tTop-5 Accuracy 98.103 (97.939)\t\n","\n"," * LOSS - 1.707, TOP-5 ACCURACY - 97.904, BLEU-4 - 0.6171666415822589\n","\n","Epoch: [29][0/126]\tLoss 1.9197 (1.9197)\tTop-5 Accuracy 95.308 (95.308)\n","Epoch: [29][100/126]\tLoss 2.0674 (2.0412)\tTop-5 Accuracy 94.667 (94.031)\n","Validation: [0/126]\tLoss 1.7977 (1.7977)\tTop-5 Accuracy 97.625 (97.625)\t\n","Validation: [100/126]\tLoss 1.7065 (1.6678)\tTop-5 Accuracy 98.645 (98.234)\t\n","\n"," * LOSS - 1.667, TOP-5 ACCURACY - 98.212, BLEU-4 - 0.6278443722978151\n","\n"],"name":"stdout"}]}]}